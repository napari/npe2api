{
  "info": {
    "author": null,
    "author_email": "\"TUM.ai\" <contact@tum-ai.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "description": "# TUMai Helmholtz Neurogenesis Napari Plugin\n\n[![License MIT](https://img.shields.io/pypi/l/neurogenesis-napari.svg?color=green)](LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/neurogenesis-napari.svg?color=green)](https://pypi.org/project/neurogenesis-napari)\n[![Python Version](https://img.shields.io/pypi/pyversions/neurogenesis-napari.svg?color=green)](https://python.org)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/neurogenesis-napari)](https://napari-hub.org/plugins/neurogenesis-napari)\n\nThis plugin provides one-click color normalization, denoising, and Cellpose-based nuclear segmentation.\n\n## Key Features\n\n| Widget | Function | Input | Output |\n|--------|----------|-------|---------|\n| **Normalize + Denoise** | Color normalization and denoising | Bright-field image | Processed image |\n| **Segment** | Nuclear segmentation | DAPI/nuclear stain | Masks, centroids, bounding boxes |\n| **Segment + Classify** | End-to-end cell analysis | 4-channel images | Cell segmentation + classification |\n\n## Quick Start\n\n### Installation\n\n```bash\npip install neurogenesis-napari\n```\n\nOr install through napari:\n1. Open napari\n2. Go to `Plugins` \u2192 `Install/Uninstall Plugins`\n3. Search for **\"TumAI Histology Toolkit\"**\n4. Click Install\n\n### Basic Usage\n\n1. **Load your images** into napari\n2. **Select the appropriate widget** from the `Plugins` menu\n3. **Choose your image layers** from the dropdown menus\n4. **Click the action button** to process\n\nThe plugin will automatically download required AI models on first use.\n\n---\n\n## Widget Documentation\n\n### Normalize + Denoise\n\n**Purpose**: Standardizes color variations and reduces noise in bright-field images.\n\n#### Usage\n1. Load a bright-field image into napari\n2. Open `Plugins` \u2192 `Normalize and Denoise`\n3. Select your bright-field image from the **BF** dropdown\n4. Click **\"Normalize + Denoise\"**\n\n#### What it does\n- **Color Normalization**: Adjusts colors against an internal reference to standardize appearance across different images/scanners\n- **Denoising**: Removes noise while preserving important cellular structures\n- **Output**: Creates a new layer named `{original_name}_denoised`\n\n---\n\n### Segment\n\n**Purpose**: Detects and segments individual cell nuclei using Cellpose.\n\n#### Usage\n1. Load a nuclear staining image (DAPI) into napari\n2. Open `Plugins` \u2192 `Segment`\n3. Select your nuclear image from the **DAPI** dropdown\n4. Optionally adjust:\n   - **GPU**: Enable for faster processing\n   - **Model**: Choose Cellpose model (`cyto3` default)\n5. Click **\"Segment Nuclei\"**\n\n#### What it does\n- **Segmentation**: Uses Cellpose to identify individual nuclei\n- **Creates 3 new layers**:\n  - `{name}_masks`: Segmentation masks\n  - `{name}_centroids`: Center points of each detected cell\n  - `{name}_bboxes`: Bounding boxes around each cell\n\n---\n\n### Segment + Classify\n\n**Purpose**: Complete pipeline that segments nuclei AND classifies cell types in multi-channel images.\n\n#### Usage\n1. Load a **4-channel image** into napari as separate layers:\n   - **DAPI**: Nuclear staining\n   - **Tuj1**: \u03b2-III-tubulin\n   - **RFP**: Red fluorescent protein marker\n   - **BF**: Bright-field\n2. Open `Plugins` \u2192 `Segment and Classify`\n3. Select each channel from the respective dropdowns\n4. Choose **Reuse cached**:\n   - **True**: Reuse previous segmentation (faster) from the segment widget\n   - **False**: Perform fresh segmentation\n5. Click **\"Segment + Classify\"**\n\n#### What it does\n1. **Segmentation**: Does segmentation same as the segment widget above\n2. **Feature extraction**: Uses a Variational Autoencoder (VAE) to extract features\n3. **Classification**: Nearest-centroid classifier assigns cell types\n\n#### Output\nCreates colored bounding box layers for each detected cell type:\n- **\ud83d\udfe3 Astrocytes** (magenta boxes)\n- **\u26ab Dead Cells** (gray boxes)\n- **\ud83d\udd35 Neurons** (cyan boxes)\n- **\ud83d\udfe2 OPCs** (lime boxes)\n\nLayer names show counts: `{count}_{cell_type}s` (e.g., `23_Neurons`)\n\n---\n\n### Supported Image Formats\n- `.czi` (via napari-czifile2)\n- `.png`, `.jpg`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "dynamic": null,
    "home_page": null,
    "keywords": null,
    "license": "The MIT License (MIT)\n        \n        Copyright (c) 2025 TUM.ai\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in\n        all copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n        THE SOFTWARE.",
    "license_expression": null,
    "license_files": [
      "LICENSE"
    ],
    "maintainer": null,
    "maintainer_email": null,
    "name": "neurogenesis-napari",
    "package_url": "https://pypi.org/project/neurogenesis-napari/",
    "platform": null,
    "project_url": "https://pypi.org/project/neurogenesis-napari/",
    "project_urls": {
      "Repository": "https://github.com/tum-ai/neurogenesis_napari"
    },
    "provides_extra": null,
    "release_url": "https://pypi.org/project/neurogenesis-napari/0.1.0a1.post2/",
    "requires_dist": [
      "cellpose==3.1.1.2",
      "huggingface-hub>=0.33.0",
      "magicgui",
      "napari-czifile2",
      "napari[pyqt5]",
      "numpy==1.26.4",
      "opencv-python==4.11.0.86",
      "pandas==2.3.0",
      "qtpy",
      "sam2==1.1.0",
      "scikit-image==0.25.2",
      "scikit-learn==1.2.2",
      "tifffile<=2023.4.12",
      "torch==2.7.1"
    ],
    "requires_python": ">=3.10",
    "summary": "A napari plugin to segment and classify cells.",
    "version": "0.1.0a1.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 30413846,
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "48ba95a8683644326bbdfaa6324cbcf64b33fe56b153757377099e4a6383dc8c",
          "md5": "227f76e3620da448f4cffc75cfd99a64",
          "sha256": "23991776edf14889c1f65f105f4b971c474bcff6e7f26772ab19c06808d9a298"
        },
        "downloads": -1,
        "filename": "neurogenesis_napari-0.1.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "227f76e3620da448f4cffc75cfd99a64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 4852,
        "upload_time": "2025-07-29T19:45:00",
        "upload_time_iso_8601": "2025-07-29T19:45:00.551346Z",
        "url": "https://files.pythonhosted.org/packages/48/ba/95a8683644326bbdfaa6324cbcf64b33fe56b153757377099e4a6383dc8c/neurogenesis_napari-0.1.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f08dfeaec551ffce0e9903cfa4f21c9f2b4890449842366c17a76a3226c93bed",
          "md5": "cd6d89fa2f9f809c0cc372985aee6df0",
          "sha256": "003e71a4bdc83b743717b03d13129721841ddf4ce80875481bfe4fd45815ace3"
        },
        "downloads": -1,
        "filename": "neurogenesis_napari-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd6d89fa2f9f809c0cc372985aee6df0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 2210714,
        "upload_time": "2025-07-29T19:45:02",
        "upload_time_iso_8601": "2025-07-29T19:45:02.208634Z",
        "url": "https://files.pythonhosted.org/packages/f0/8d/feaec551ffce0e9903cfa4f21c9f2b4890449842366c17a76a3226c93bed/neurogenesis_napari-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a1.post2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "cd757b110582752c75984a4dafdd8b50418063c52b28fa4094119c06671645ce",
          "md5": "f7f1e65ccdfeb0fd9f753588d61e053b",
          "sha256": "855e8faa9732db7dfc8c2d17d615cd1c3891aba40e53369e08237afaadf2f365"
        },
        "downloads": -1,
        "filename": "neurogenesis_napari-0.1.0a1.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7f1e65ccdfeb0fd9f753588d61e053b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 2224939,
        "upload_time": "2025-07-29T20:27:39",
        "upload_time_iso_8601": "2025-07-29T20:27:39.722058Z",
        "url": "https://files.pythonhosted.org/packages/cd/75/7b110582752c75984a4dafdd8b50418063c52b28fa4094119c06671645ce/neurogenesis_napari-0.1.0a1.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "de4243a26e69795a8302512ce28fd7c3cf73d898b1b49a8f8d35134045864d61",
          "md5": "2ba6a54e047e0c53362e0e6168878626",
          "sha256": "dc6935b62974ecf0b651d4e4f860978c54e2d46c8cda435d846de32958f90103"
        },
        "downloads": -1,
        "filename": "neurogenesis_napari-0.1.0a1.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ba6a54e047e0c53362e0e6168878626",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 2210751,
        "upload_time": "2025-07-29T20:27:41",
        "upload_time_iso_8601": "2025-07-29T20:27:41.024550Z",
        "url": "https://files.pythonhosted.org/packages/de/42/43a26e69795a8302512ce28fd7c3cf73d898b1b49a8f8d35134045864d61/neurogenesis_napari-0.1.0a1.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "cd757b110582752c75984a4dafdd8b50418063c52b28fa4094119c06671645ce",
        "md5": "f7f1e65ccdfeb0fd9f753588d61e053b",
        "sha256": "855e8faa9732db7dfc8c2d17d615cd1c3891aba40e53369e08237afaadf2f365"
      },
      "downloads": -1,
      "filename": "neurogenesis_napari-0.1.0a1.post2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7f1e65ccdfeb0fd9f753588d61e053b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 2224939,
      "upload_time": "2025-07-29T20:27:39",
      "upload_time_iso_8601": "2025-07-29T20:27:39.722058Z",
      "url": "https://files.pythonhosted.org/packages/cd/75/7b110582752c75984a4dafdd8b50418063c52b28fa4094119c06671645ce/neurogenesis_napari-0.1.0a1.post2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "de4243a26e69795a8302512ce28fd7c3cf73d898b1b49a8f8d35134045864d61",
        "md5": "2ba6a54e047e0c53362e0e6168878626",
        "sha256": "dc6935b62974ecf0b651d4e4f860978c54e2d46c8cda435d846de32958f90103"
      },
      "downloads": -1,
      "filename": "neurogenesis_napari-0.1.0a1.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "2ba6a54e047e0c53362e0e6168878626",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 2210751,
      "upload_time": "2025-07-29T20:27:41",
      "upload_time_iso_8601": "2025-07-29T20:27:41.024550Z",
      "url": "https://files.pythonhosted.org/packages/de/42/43a26e69795a8302512ce28fd7c3cf73d898b1b49a8f8d35134045864d61/neurogenesis_napari-0.1.0a1.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}