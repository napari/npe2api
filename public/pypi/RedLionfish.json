{
  "info": {
    "author": "Luis Perdigao",
    "author_email": "luis.perdigao@rfi.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: napari",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "description": "# Red lionfish (RL) deconvolution\n\n*Richardson-Lucy deconvolution for fishes, scientists and engineers.*\n\n\nThis software is for filtering 3D data using the Richardson-Lucy deconvolution algorithm.\n\nRichardson-Lucy is an iterative deconvolution algorithm that is used to remove\npoint spread function (PSF) or optical transfer function (OTF) artifacts from experimental images.\n\nThe method was originally developed for astronomy to remove optical effects and simultaneously reduce poisson noise in 2D images.\n\n[Lucy, L. B. An iterative technique for the rectification of observed distributions. The Astronomical Journal 79, 745 (1974). DOI: 10.1086/111605](https://ui.adsabs.harvard.edu/abs/1974AJ.....79..745L/abstract)\n\nThe method can also be applied to 3D data. Nowadays this filtering technique is also widely used by microscopists.\n\nThe Richardson-Lucy deconvolution algorigthm is iterative. Each iteration involves the calculation of 2 convolutions, one element-wise multiplication and one element-wise division.\n\nWhen dealing with 3D data, the Richardson-Lucy algorithm is quite computional intensive primarly due to the calculation of the convolution, and can take a while to complete depending on the resources available. Convolution is significantly sped up using FFT compared to raw convolution.\n\nThis software was developed with the aim to make the R-L computation faster by exploiting GPU resources, and with the use of FFT convolution.\n\nTo make RedLionfish easily accessible, it is available through PyPi and anaconda (conda-forge channel). A useful plugin for Napari is also available.\n\nPlease note that this software only works with 3D data. For 2D data there are many alternatives such as the DeconvolutionLab2 in Fiji (ImageJ) and sckikit-image.\n\n## Napari plugin\n\nYou can now use the Napari's plugin installation in *Menu -> Plugins -> Install/Uninstall Plugins...*.\nHowever, if you chose to use this method, GPU acceleration may not be available and it will use the CPU backend. Better check.\n\n![](resources\\imag1.jpg)\n\nAlternatively, if you follow the installation instructions below, and install the napari in the same python environment\nthen the plugin should be immediately available in the *Menu -> Plugins -> RedLionfish*.\n\n\n## Installation\n\nPreviously there was a problem in installing using `pip`, because no PyOpenCL wheels for windows were avaiable. It is now avaialble. This package can be installed using pip or conda.\n\n### Conda install\n\nThis package is available in conda-forge channel.\nIt contains the precompiled libraries and it will install all the requirments for GPU-accelerated RL calculations.\n\n`conda install redlionfish -c conda-forge`\n\n### Install from PyPi\n\n```\npip install redlionfish\n```\n\nIn Linux , the package `ocl-icd-system` may also be useful.\n\n```\nconda install reikna pyopencl ocl-icd-system -c conda-forge\n```\n\n\n#### Manual installation using the conda package file.\n\nDownload the appropriate conda package .bz2 at [https://github.com/rosalindfranklininstitute/RedLionfish/releases](https://github.com/rosalindfranklininstitute/RedLionfish/releases)\n\nIn the command line, successively run:\n```\nconda install <filename.bz2>\nconda update --all -c conda-forge\n```\nThe second line is needed because you are installing from a local file, conda installer will not install dependencies. Right after this you should run the update command given.\n\n\n### Manual installation (advanced and for developers)\n\nPlease note that in order to use OpenCL GPU accelerations, PyOpenCL must be installed.\nThe best way to get it working is to install it under a conda environment.\n\nThe installation is similar to the previously described for PyPi.\n\n`conda install reikna pyopencl`\n\nor\n`conda install reikna pyopencl ocl-icd-system -c conda-forge` (Linux)\n\nClone/download from source [https://github.com/rosalindfranklininstitute/RedLionfish/](https://github.com/rosalindfranklininstitute/RedLionfish/)\n\nand run\n\n`python setup.py install`\n\n\n### Debug installation\nIf you want to test and modify the code then you should probably install in debug mode using:\n\n`python setup.py develop`\n\nor\n\n`pip install -e .`\n\n\n## More information\n\nThe software has algorithms for Richardson-Lucy deconvolution that use either CPU and GPU.\n\nThe CPU version is very similar to the [skimage.restoration.richardson_lucy](https://scikit-image.org/docs/dev/api/skimage.restoration.html#skimage.restoration.richardson_lucy) code, with improvments in speed.\nmajor differences are:\n\n- the convolution steps use FFT only.\n- PSF and PSF-flipped FFTs are precalculated before starting iterations.\n\nThe GPU version, was written in to use Reikna package, which does FFT using OpenCL, via PyOpenCL.\n\nUnfortunately, a major limitation in RAM usage exists with PyOpenCL.\nLarge 3D data volumes with cause out-of-memory error when trying to upload data to the GPU for FFT calculations.\nAs such, to overcome this problem, a block algorithm is used, which splits data into blocks with padded data.\nThe results are then combined together to give the final result.\nThis affects the perfomance of the calculation rather significantly, but with the advantage of being possible to handle large data volumes.\n\nIf Richardson-Lucy deconvolution using the GPU method fails, RedLionfish will falls back to CPU calculation. Check console output for messages.\n\nIf you are using the RedLionfish in your code, note that, by default, `def doRLDeconvolutionFromNpArrays()` method it uses the GPU OpenCL version.\n\n## Testing\n\nMany examples can be found in `/test' folder.\n\nA quick and benchmarking installation can be run from the proect root using the command:\n\n'python test\\test_and_benchm.py'\n\nor (*nix)\n\n'python test/test_and_benchm.py'\n\nThis will print out information about your GPU device (if available) and run some deconvolutions.\nIt initially creates some data programatically, convolutes with a gaussian PSF, and add Poisson noise.\nThen it executes executes the\nRichardson-Lucy deconvolution calculation using CPU and GPU methods, for 10 iterations.\nDuring the calculation it will print some information to the console/terminal, including the time it takes to run the calculation.\n\n\nComputer generated data and an experimental PSF can be found in `test\\testdata`\n\n### Testing Redlionfish in napari\n\nHere is an example testing the Redlionfish plugin in napari:\n\n1. load data `test\\testdata\\gendata_psfconv_poiss_large.tif` (can use draga and drop)\n2. load psf data `test\\testdata\\PSF_RFI_8bit.tif`\n3. In the RedLionfish side window ensure that 'gendata_psfconv_poiss_large' is selected in data dropdown widget, and `PSF_RFI_8bit` is selected in psfdata widget.\n4. Choose number of iterations (default=10)\n5. Click 'Go' button and wait until result shows as a new data layer.\n6. Use controls of the left panel to compare before and after RL deconvolution: select 'RL-deconvolution' layer and set colormap to red. Hide PSF_RFI_8bit. Make sure that both 'RL-deconvolution' and 'gendata-psfconv' are visible. Now, hide/unhide RL-deconvolution layer to see before and after deconvolution. Adjust contrast limits of each layer as desired.\n\n\n## GPU vs CPU\n\nYou may notice that choosing GPU does not make RL-calculation much faster compared with CPU, and sometimes is slower.\n\nWhich method runs the R-L deconvolution faster. That depends on the computer configuration/architecture.\n\nGPU calculations will be generally faster than CPU with bigger data volumes.\n\nGPU calculation will be significantly faster if using a dedicated GPU card.\n\nPlease see benchmark values that highlights significant variability in calculation speeds.\n\n\n## Coding\n\nPlease feel free to browse /test folder for examples.\n\nIn your code, add the import.\n\n`import RedLionfishDeconv`\n\nin order to use the functions.\n\nThe most useful function is perhaps the following.\n\n`def doRLDeconvolutionFromNpArrays(data_np , psf_np ,*, niter=10, method='gpu', useBlockAlgorithm=False, callbkTickFunc=None, resAsUint8 = False) `\n\nThis will do the Richardson-Lucy deconvolution on the data_np (numpy, 3 dimensional data volume) using the provided PSF data volume, for 10 iterations. GPU method is generally faster but it may fail. If it does fail, the program will automatically use the CPU version that uses the scipy fft package.\n\n\n\n## Manually building the conda package\n\nFor this installation, ensure that the conda-build package is installed\n\n`conda install conda-build`\n\nIn windows, simply execute\n\n`conda-create-package.bat`\n\n\nOr, execute the following command-line to create the installation package.\n\n`conda-build --output-folder ./conda-built-packages -c conda-forge conda-recipe`\n\nand the conda package will be created in folder *conda-built-packages*.\n\nOtherwise, navigate to `conda-recipe`, and execute on the command-line `conda build .`\n\nIt will take a while to complete.\n\n## Contact\n\nReport issues and questions in project's github page, please. Please don't try to send emails as they may be igored or spam-filtered.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rosalindfranklininstitute/RedLionfish",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "RedLionfish",
    "package_url": "https://pypi.org/project/RedLionfish/",
    "platform": null,
    "project_url": "https://pypi.org/project/RedLionfish/",
    "project_urls": {
      "Homepage": "https://github.com/rosalindfranklininstitute/RedLionfish"
    },
    "release_url": "https://pypi.org/project/RedLionfish/0.8/",
    "requires_dist": [
      "numpy",
      "scipy",
      "pyopencl",
      "reikna"
    ],
    "requires_python": "",
    "summary": "Fast Richardson-Lucy deconvolution of 3D volume data using GPU or CPU with napari plugin.",
    "version": "0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15271435,
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "733e5b11c7a7b2b27540c64905fcd931",
          "sha256": "4526183cf061b27c4d5032d3473b4a65880971c6624f2c899d41e7d6bc858aa0"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "733e5b11c7a7b2b27540c64905fcd931",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19408,
        "upload_time": "2021-11-19T14:55:32",
        "upload_time_iso_8601": "2021-11-19T14:55:32.357000Z",
        "url": "https://files.pythonhosted.org/packages/e2/80/6e9fb6768c2d95a6f00a8b1622a41d2a832129aa39525275a72944b275c2/RedLionfish-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "44635728feb8513afffdd964da314ef1",
          "sha256": "396a8ea783fd1860f424748c58f92b0b76112366f1059921db1f367142adcaf8"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44635728feb8513afffdd964da314ef1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20348,
        "upload_time": "2021-11-23T15:51:11",
        "upload_time_iso_8601": "2021-11-23T15:51:11.879008Z",
        "url": "https://files.pythonhosted.org/packages/52/84/c44c2fc5d02a8e793b3127ebcfbc648856a2825db77fe2c1100ea771f38a/RedLionfish-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "eadd48876876254e5a9e58706bea9a95",
          "sha256": "2590ac98a91e0ace4d081af8a424d7f7018f48ac8fe55a176378200249d95ece"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eadd48876876254e5a9e58706bea9a95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20421,
        "upload_time": "2021-11-23T15:51:15",
        "upload_time_iso_8601": "2021-11-23T15:51:15.819160Z",
        "url": "https://files.pythonhosted.org/packages/5a/c4/a642f9cc7ff274e0d40fbac66ab3ebf1a47b1b0e4f1bf610a5957d8a653c/RedLionfish-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "42e9e5a41bf322cd0e94dcf5caeccc90",
          "sha256": "78cba455635aa093cfc220ecc02fd0c894cf0a54f2072cb438c1b1eb1eca4642"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42e9e5a41bf322cd0e94dcf5caeccc90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24231,
        "upload_time": "2022-01-31T13:07:41",
        "upload_time_iso_8601": "2022-01-31T13:07:41.536651Z",
        "url": "https://files.pythonhosted.org/packages/a6/ff/6cc8c65c51603edbde8f3bc3dd6405332ed2765662a2d48ec55381b6f8db/RedLionfish-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9295892a180e774d2fda0b4e1c5f01fa",
          "sha256": "e05242449b866b60dcca6a816c75274b4dd0f802f14a7a10c74eb4ea7168e060"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9295892a180e774d2fda0b4e1c5f01fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22711,
        "upload_time": "2022-01-31T13:07:44",
        "upload_time_iso_8601": "2022-01-31T13:07:44.391793Z",
        "url": "https://files.pythonhosted.org/packages/e8/75/42e9b41361d220becfff891a7f4e094ebb8e904001e5dca3f85c9be92cfd/RedLionfish-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "124dacd5c0a6d29c912fba4584c87f96",
          "sha256": "b21190aec7fb6efe1646bd9384e41b88ebc62f116ac77a12d10694984e7d7233"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "124dacd5c0a6d29c912fba4584c87f96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24964,
        "upload_time": "2022-09-22T13:47:05",
        "upload_time_iso_8601": "2022-09-22T13:47:05.775308Z",
        "url": "https://files.pythonhosted.org/packages/1a/5c/28f57fffcb787816d6acf036d565915b208396e6e9bd0006dbea495f9b07/RedLionfish-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "52d8b284c0f75481675c8256f0f384cf",
          "sha256": "7dc4b549e0f520c4f21350244261a65a785349d1ecf3bdc4284d295fa9864e96"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "52d8b284c0f75481675c8256f0f384cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22951,
        "upload_time": "2022-09-22T13:47:08",
        "upload_time_iso_8601": "2022-09-22T13:47:08.194363Z",
        "url": "https://files.pythonhosted.org/packages/0b/61/32139f73f714913de747e8b8e762026bfdb5cef013d1e4b4313f52f46cb6/RedLionfish-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "805e586ff3e11e12b937b0c59e43cfc4",
          "sha256": "d8ab2270ebdefe5e9f91c3d32459f7c61c0724f5c480c0bfab4f52d39b1a9d1e"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "805e586ff3e11e12b937b0c59e43cfc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25503,
        "upload_time": "2022-09-30T20:40:24",
        "upload_time_iso_8601": "2022-09-30T20:40:24.914946Z",
        "url": "https://files.pythonhosted.org/packages/6a/ba/b5079d0c2d02b106043b1c33ace214dc748307673e829691b1e4ef2704f3/RedLionfish-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fb6921cd400568a61c56fee58b646e95",
          "sha256": "30662cb8e6c85705decd53542b6cd6ca5624381f2ca223da161aaaef84c470b1"
        },
        "downloads": -1,
        "filename": "RedLionfish-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fb6921cd400568a61c56fee58b646e95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22950,
        "upload_time": "2022-09-30T20:40:28",
        "upload_time_iso_8601": "2022-09-30T20:40:28.499450Z",
        "url": "https://files.pythonhosted.org/packages/07/10/d7ebdaa5ae1b779600b3419b666726a83ba01a2464c6562d846c77090a81/RedLionfish-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "805e586ff3e11e12b937b0c59e43cfc4",
        "sha256": "d8ab2270ebdefe5e9f91c3d32459f7c61c0724f5c480c0bfab4f52d39b1a9d1e"
      },
      "downloads": -1,
      "filename": "RedLionfish-0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "805e586ff3e11e12b937b0c59e43cfc4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25503,
      "upload_time": "2022-09-30T20:40:24",
      "upload_time_iso_8601": "2022-09-30T20:40:24.914946Z",
      "url": "https://files.pythonhosted.org/packages/6a/ba/b5079d0c2d02b106043b1c33ace214dc748307673e829691b1e4ef2704f3/RedLionfish-0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "fb6921cd400568a61c56fee58b646e95",
        "sha256": "30662cb8e6c85705decd53542b6cd6ca5624381f2ca223da161aaaef84c470b1"
      },
      "downloads": -1,
      "filename": "RedLionfish-0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "fb6921cd400568a61c56fee58b646e95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22950,
      "upload_time": "2022-09-30T20:40:28",
      "upload_time_iso_8601": "2022-09-30T20:40:28.499450Z",
      "url": "https://files.pythonhosted.org/packages/07/10/d7ebdaa5ae1b779600b3419b666726a83ba01a2464c6562d846c77090a81/RedLionfish-0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}