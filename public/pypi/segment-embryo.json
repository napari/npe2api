{
  "info": {
    "author": "Volker Baecker",
    "author_email": "volker.baecker@mri.cnrs.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "description": "# segment-embryo\n\n[![License MIT](https://img.shields.io/pypi/l/segment-embryo.svg?color=green)](https://github.com/MontpellierRessourcesImagerie/segment-embryo/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/segment-embryo.svg?color=green)](https://pypi.org/project/segment-embryo)\n[![Python Version](https://img.shields.io/pypi/pyversions/segment-embryo.svg?color=green)](https://python.org)\n[![tests](https://github.com/MontpellierRessourcesImagerie/segment-embryo/workflows/tests/badge.svg)](https://github.com/MontpellierRessourcesImagerie/segment-embryo/actions)\n[![codecov](https://codecov.io/gh/MontpellierRessourcesImagerie/segment-embryo/branch/main/graph/badge.svg)](https://codecov.io/gh/MontpellierRessourcesImagerie/segment-embryo)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/segment-embryo)](https://napari-hub.org/plugins/segment-embryo)\n\n<img src=\"https://github.com/user-attachments/assets/4459f48c-435f-489d-b27c-25a4ea390871\" align='left' width=\"30%\"></img> 3D Segment ascidian embryos using cellpose. The images are first rescaled to be isotropic and then downscaled, before cellpose is used. The resulting labels are upscaled to match the original data.\n\n----------------------------------\n\nThis [napari] plugin was generated with [copier] using the [napari-plugin-template].\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/napari-plugin-template#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/stable/plugins/index.html\n-->\n\n## Installation\n\nYou can install `segment-embryo` via [pip]:\n\n    pip install segment-embryo\n\n## Usage\n\nWe will segment the cells of an embryo and count the mRNA spots tagged in another channel per cell.\n\n### 1. Opening an image\n\nDrag a tif- or czi-file from your file-browser and drop it into the napari window. The image will opened. The napari-plugin [napari-czifile2](https://github.com/BodenmillerGroup/napari-czifile2) is used to open czi-files.\n\n### 2. Checking and modifying the voxel size \n\nOpen the plugin [Scale-Tool plugin](https://pypi.org/project/set-calibration/) from the ``Plugins``-menu. Make sure the voxel-size values are set correctly in nm. Correct the values and the unit if necessary and press the ``Apply to all`` button.\n\n<img src=\"https://github.com/user-attachments/assets/409b669b-675f-495f-ba11-c6ded0442b2b\" align='left' width=\"30%\"></img> \n\n### 3. Segmenting the cells of the embryo\n\n<img src=\"https://github.com/user-attachments/assets/1b464f39-47ff-412d-bdb8-c2d61837af39\" align='right' width=\"30%\"></img> \n\nClose the [Scale-Tool plugin](https://pypi.org/project/set-calibration/) and open the ``Embryo Segmentation``-plugin from the ``Plugins``-menu. Select the layer containing the membranes as ``input image`` and the layer containing the nuclei as ``nuclei image``. Press the ``run`` button and wait until the segmentation is finished. When the segmentation is finished a ``Labels layer`` with the result will be added to the layers list. \n\n<img src=\"https://github.com/user-attachments/assets/4dcf8aad-22ef-4a20-a6a6-50bcb81c7011\" align='left' width=\"20%\"></img> \n\n### 4. Exporting and curating the labels\n\nIf the labels need curation, select  the labels layer and save it to a tiff-file via the menu ``File>Save Selected Layers...``. Import the saved labels into the [Morphonet 2 standalone client](https://morphonet.org/downloads), make the corrrections and export the corrected labels to a tiff-file. Open the tiff-file in napari.\n\n### 5. Detecting spots\n\nClose the ``Embryo Segmentation`` plugin, select the layer containing the mRNA-spots and open the [Detect FISH spots-plugin](https://www.napari-hub.org/plugins/napari-bigfish) from the ``Plugins``-menu. Estimate the spot size in xy and z in ImageJ and enter the values into the corresponding fields. You can either estimate the threshold let the software find a threshold value. Press the ``detect spots button``. Depending on the result you might want to modify the threshold-value and run the plugin again.\n\n<img src=\"https://github.com/user-attachments/assets/6507eb3e-d732-4d69-8c63-02d83f8975f1\" align='left' width=\"30%\"></img> \n\n### 6. Counting Spots per cell\n\nIn the ``Spot Counting`` section of the plugin, select the spots layer as input and the labels layer for the ``cytoplasm labels`` and also for the ``nuclei labels``. \n\n![image](https://github.com/user-attachments/assets/445da47f-c3fc-4437-803d-e635500bf1af)\n\nPress the ``Count Spots`` button! You will obtain a table with the numbers of spots per cell. If you provide the image twice, for the cytoplasm as well as for the nuclei, the spots will all be counted inside the nuclei. If you also want to know per cell how many spots are in the nucleus and how many are in the cytoplasm, you need to provide a mask or label image for the nuclei. You can obtain one by thresholding the nucleus image or by selecting ``segment nuclei`` in step 3.\n\n\n<img src=\"https://github.com/user-attachments/assets/7f325bc5-baaf-4b74-b240-f174b81d0e96\" align='left' width=\"30%\"></img>\n<img src=\"https://github.com/user-attachments/assets/463072c7-d647-4d23-90d9-15de3398bf31\" align='right' width=\"30%\"></img>\n\nYou can copy the data from the table to your spreadsheat software. Activate the table by clicking into it and press ``ctrl+a`` to select all rows and columns. Press ``ctrl+c`` to copy the data to the clipboard and ``ctrl+v`` to paste it into your spreadsheet.\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license,\n\"segment-embryo\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[copier]: https://copier.readthedocs.io/en/stable/\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[napari-plugin-template]: https://github.com/napari/napari-plugin-template\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "dynamic": null,
    "home_page": null,
    "keywords": null,
    "license": "The MIT License (MIT)  Copyright (c) 2024 Volker Baecker  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "license_expression": null,
    "license_files": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "segment-embryo",
    "package_url": "https://pypi.org/project/segment-embryo/",
    "platform": null,
    "project_url": "https://pypi.org/project/segment-embryo/",
    "project_urls": {
      "Changelog": "https://github.com/MontpellierRessourcesImagerie/segment-embryo/releases",
      "Documentation": "https://github.com/MontpellierRessourcesImagerie/segment-embryo#segment-embryo",
      "Homepage": "https://github.com/MontpellierRessourcesImagerie/segment-embryo",
      "Issues": "https://github.com/MontpellierRessourcesImagerie/segment-embryo/issues",
      "Repository": "https://github.com/MontpellierRessourcesImagerie/segment-embryo.git"
    },
    "provides_extra": [
      "testing"
    ],
    "release_url": "https://pypi.org/project/segment-embryo/0.5/",
    "requires_dist": [
      "numpy",
      "magicgui",
      "qtpy",
      "scikit-image",
      "cellpose",
      "czifile",
      "napari-czifile2",
      "set-calibration",
      "big-fish",
      "napari-bigfish",
      "scikit-image",
      "tox; extra == \"testing\"",
      "pytest; extra == \"testing\"",
      "pytest-cov; extra == \"testing\"",
      "pytest-qt; extra == \"testing\"",
      "napari; extra == \"testing\"",
      "pyqt5; extra == \"testing\"",
      "numpy; extra == \"testing\""
    ],
    "requires_python": ">=3.9",
    "summary": "3D Segment ascidian embryos using cellpose. The images are first rescaled to be isotropic and then downscaled, before cellpose is used. The resulting labels are upscaled to match the original data.",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 30503892,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21d40b96a49552d5e8cd8e0bcbcd5e411e00ef84767bda2bbee4e2d39f23a53f",
          "md5": "9bad4cb8f7d3f437e43d71dfc9e0c51f",
          "sha256": "14b954d8943f2392c1ccf7b23dddbecd000de8bf3c8370191bdace9ca89a626e"
        },
        "downloads": -1,
        "filename": "segment_embryo-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bad4cb8f7d3f437e43d71dfc9e0c51f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11103,
        "upload_time": "2024-11-27T15:15:22",
        "upload_time_iso_8601": "2024-11-27T15:15:22.220286Z",
        "url": "https://files.pythonhosted.org/packages/21/d4/0b96a49552d5e8cd8e0bcbcd5e411e00ef84767bda2bbee4e2d39f23a53f/segment_embryo-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18d7519b7e8d5b13c5a62d390f30858adfba56b324d0f9dd1c94cd9ae0109865",
          "md5": "308ebdce23afa4ca31264a7a443333bd",
          "sha256": "df007c49e1c1afa53e10713887627f55550191b5b3cb855c37135386d15f43fa"
        },
        "downloads": -1,
        "filename": "segment_embryo-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "308ebdce23afa4ca31264a7a443333bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14193,
        "upload_time": "2024-11-27T15:15:24",
        "upload_time_iso_8601": "2024-11-27T15:15:24.242087Z",
        "url": "https://files.pythonhosted.org/packages/18/d7/519b7e8d5b13c5a62d390f30858adfba56b324d0f9dd1c94cd9ae0109865/segment_embryo-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "062e8b0fab94f707e470e9eaf00bd588c6f539418cbd037a7e5105da92e1ef69",
          "md5": "2661365cd69a4f3f76ecdb3ff240d4ec",
          "sha256": "7af626f5d4a21c0d8a04ec03567ccee60e10f3a8157b9794830a9db6c03501e7"
        },
        "downloads": -1,
        "filename": "segment_embryo-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2661365cd69a4f3f76ecdb3ff240d4ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 13037,
        "upload_time": "2025-01-15T17:19:12",
        "upload_time_iso_8601": "2025-01-15T17:19:12.419283Z",
        "url": "https://files.pythonhosted.org/packages/06/2e/8b0fab94f707e470e9eaf00bd588c6f539418cbd037a7e5105da92e1ef69/segment_embryo-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3594212c3baa45374a637fcfd5a30a1ebebe2c13ccbb6e0d23e0dd930e59132a",
          "md5": "a2446585d904b286f234d07072151673",
          "sha256": "2111d24dbf05f54d825c4adf2e99a4361c5507acf03c9fa71c2126c56ca24dd4"
        },
        "downloads": -1,
        "filename": "segment_embryo-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a2446585d904b286f234d07072151673",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17408,
        "upload_time": "2025-01-15T17:19:14",
        "upload_time_iso_8601": "2025-01-15T17:19:14.617550Z",
        "url": "https://files.pythonhosted.org/packages/35/94/212c3baa45374a637fcfd5a30a1ebebe2c13ccbb6e0d23e0dd930e59132a/segment_embryo-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "062e8b0fab94f707e470e9eaf00bd588c6f539418cbd037a7e5105da92e1ef69",
        "md5": "2661365cd69a4f3f76ecdb3ff240d4ec",
        "sha256": "7af626f5d4a21c0d8a04ec03567ccee60e10f3a8157b9794830a9db6c03501e7"
      },
      "downloads": -1,
      "filename": "segment_embryo-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2661365cd69a4f3f76ecdb3ff240d4ec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 13037,
      "upload_time": "2025-01-15T17:19:12",
      "upload_time_iso_8601": "2025-01-15T17:19:12.419283Z",
      "url": "https://files.pythonhosted.org/packages/06/2e/8b0fab94f707e470e9eaf00bd588c6f539418cbd037a7e5105da92e1ef69/segment_embryo-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3594212c3baa45374a637fcfd5a30a1ebebe2c13ccbb6e0d23e0dd930e59132a",
        "md5": "a2446585d904b286f234d07072151673",
        "sha256": "2111d24dbf05f54d825c4adf2e99a4361c5507acf03c9fa71c2126c56ca24dd4"
      },
      "downloads": -1,
      "filename": "segment_embryo-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a2446585d904b286f234d07072151673",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17408,
      "upload_time": "2025-01-15T17:19:14",
      "upload_time_iso_8601": "2025-01-15T17:19:14.617550Z",
      "url": "https://files.pythonhosted.org/packages/35/94/212c3baa45374a637fcfd5a30a1ebebe2c13ccbb6e0d23e0dd930e59132a/segment_embryo-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}