{
  "name": "cell-AAP",
  "display_name": "cell-AAP",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.1.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "cell-AAP.run",
        "title": "Inference GUI",
        "python_name": "cell_AAP.napari.main:create_cellAAP_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "cell-AAP.batch",
        "title": "Batch Inference GUI",
        "python_name": "cell_AAP.napari.main:create_batch_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "cell-AAP.dataset",
        "title": "Dataset Generation GUI",
        "python_name": "cell_AAP.napari_dataset.main:create_dataset_generation_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "cell-AAP.run",
        "display_name": "Inference GUI",
        "autogenerate": false
      },
      {
        "command": "cell-AAP.batch",
        "display_name": "Batch Inference GUI",
        "autogenerate": false
      },
      {
        "command": "cell-AAP.dataset",
        "display_name": "Dataset Generation GUI",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.4",
    "name": "cell-AAP",
    "version": "1.0.5",
    "dynamic": [
      "license-file"
    ],
    "platform": null,
    "supported_platform": null,
    "summary": null,
    "description": "# Cellular Annotation & Perception Pipeline\n\n![](https://github.com/anishjv/cell-AAP/blob/main/images/fig_1.png?raw=true)\n\n## Description\nCell-APP automates the generation of cell masks (and classifications too!), enabling users to create \ncustom instance segmentation training datasets in transmitted-light microscopy. \n\nTo learn more, read our preprint: https://www.biorxiv.org/content/10.1101/2025.01.23.634498v2.\n\nFor questions regarding installation or usage, contact: anishjv@umich.edu\n\n## Usage \n1. Users who wish to segment HeLa, U2OS, HT1080, or RPE-1 cell lines may try our pre-trained model. These models can be used through our GUI (see **Installation**) and their weights can be downloaded at: https://zenodo.org/communities/cellapp/records?q=&l=list&p=1&s=10. To learn about using pre-trained models through the GUI, see this video: \n\n\n\n2. Users who wish to segment their own cell lines may: (a) try our \"general\" model (GUI/weight download) or (b) \ntrain a custom model by creating an instance segmentation dataset via our *Dataset Generation GUI* (see **Installation**). To learn about creating custom datasets through the GUI, see this video: \n\n## Installation\n\n`cell-AAP` requires Python **3.11\u20133.12**. We recommend installing into a clean virtual environment (via `conda` or `venv`) to avoid dependency conflicts.\n\n### 1. Create and activate an environment\n\nWith **conda**:\n```bash\nconda create -n cellapp -c conda-forge python=3.11\nconda activate cellapp\n```\n\nOr with **venv**:\n```bash \npython -m venv cellapp\nsource cellapp/bin/activate  # Linux/Mac\ncellapp\\Scripts\\activate     # Windows PowerShell\n```\n\n### 2. Install Pytorch:\n```bash\nconda install -c pytorch -c conda-forge pytorch torchvision #Mac\npip install torch torchvision #Linux/Windows\n```\n\n### 3. Install Cell-APP:\n```bash\npip install cell-AAP\n```\n### 4. Finally, detectron2 must be built from source atop Cell-APP:\n```bash\n    \n#Mac\nCC=clang CXX=clang++ ARCHFLAGS=\"-arch arm64\" python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'\n\n#Linux/Windows\n python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'\n```\n\n## Napari Plugin Usage\n\n1. To open napari simply type \"napari\" into the command line, ensure that you are working the correct environment\n2. To instantiate the plugin, navigate to the \"Plugins\" menu and hover over \"cell-AAP\"\n3. You should see three plugin options; two relate to *Usage 1*; one relates to *Usage 2*. \n\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": "Anish Virdi",
    "author_email": null,
    "maintainer": null,
    "maintainer_email": null,
    "license": "MIT",
    "classifier": [
      "Framework :: napari",
      "Programming Language :: Python :: 3"
    ],
    "requires_dist": [
      "napari[all]>=0.4.19",
      "numpy<2.0,>=1.23",
      "opencv-python>=4.9.0",
      "tifffile>=2024.2.12",
      "scikit-image<0.26.0,>=0.23.2",
      "qtpy>=2.4.1",
      "pillow>=10.3.0",
      "scipy>=1.12.0",
      "timm>=1.0.7",
      "pandas>=2.2.2",
      "superqt>=0.6.3",
      "btrack>=0.6.5",
      "seaborn>=0.13.2",
      "openpyxl>=3.1.4",
      "joblib>=1.0",
      "scikit-learn>=0.22",
      "segment-anything>=1.0",
      "pycocotools>=2.0.7",
      "lxml>=4.9.0",
      "lxml_html_clean>=0.1.0",
      "torch>=2.3.1; platform_system != \"Darwin\" and extra == \"torch\"",
      "torchvision>=0.18.1; platform_system != \"Darwin\" and extra == \"torch\"",
      "torch>=2.3.1; platform_system != \"Darwin\" and extra == \"full\"",
      "torchvision>=0.18.1; platform_system != \"Darwin\" and extra == \"full\""
    ],
    "requires_python": "<3.13,>=3.11",
    "requires_external": null,
    "project_url": null,
    "provides_extra": [
      "torch",
      "torch-macos",
      "full"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}