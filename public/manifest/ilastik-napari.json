{
  "name": "ilastik-napari",
  "display_name": "ilastik plugin for napari",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "ilastik-napari.pixel_classification",
        "title": "Open ilastik Pixel Classification Widget",
        "python_name": "ilastik.napari.plugin:PixelClassificationWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "ilastik-napari.pixel_classification",
        "display_name": "ilastik Pixel Classification",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "ilastik-napari",
    "version": "0.2.3",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "ilastik plugin for napari",
    "description": "# ilastik-napari\n\n[Napari][napari] plugin for interactive pixel classification.\nDesigned to be similar to the pixel classification workflow in [classic ilastik][ilastik].\n\n## Installation\n\nThis plugin requires you to use a _conda_ environment. The environment manager conda comes in a few different forms.\nIf you haven't used conda before, you can find more information in the [conda user guide][conda-user-guide].\nYou can use whichever variant you prefer, as the resulting environment should be the same, but we recommend the [_mambaforge_][mambaforge] variant as it is usually the fastest.\nWhen using mambaforge, the `mamba` command usually replaces the `conda` command one would otherwise use.\n\nOnce you have installed mambaforge, set up a conda environment with napari and the _fastfilters_ package, and then use pip to install _ilastik-napari_:\n```shell\nmamba create -y -c ilastik-forge -c conda-forge -n my-napari-env napari fastfilters\nmamba activate my-napari-env\npip install ilastik-napari\n```\n\nFinally, run napari:\n```shell\nnapari\n```\nThat's it! You should be able to find the ilastik-napari plugin in the Plugins menu.\n\nIf you prefer to __install napari using pip__ instead of conda:\nMake sure to install `napari[all]`.\nUnless you want to [choose a PyQt implementation other than _PyQt5_][napari-pyqt], in which case you should leave out the `[all]` extra.\n\n## Usage\n\nAs a prerequisite, make sure you understand the [napari basics][napari-quickstart].\n\n1. Open your image, or use a sample in _File - Open Sample_.\n\n   ![Use a sample image](https://ilastik.org/assets/ilastik-napari/image-sample.png \"Use a sample image\")\n\n2. Activate the plugin in the _Plugins_ menu.\n\n   ![Activate the plugin](https://ilastik.org/assets/ilastik-napari/activation.png \"Activate the plugin\")\n\n3. In _layer list_, create a new _Labels_ layer.\n\n   ![Labels layer](https://ilastik.org/assets/ilastik-napari/labels-layer.png \"Labels layer\")\n\n4. In _layers control_, switch to the _paint_ action.\n\n   ![Paint action](https://ilastik.org/assets/ilastik-napari/paint-action.png \"Paint action\")\n\n5. Draw your background labels.\n\n   ![Paint the background](https://ilastik.org/assets/ilastik-napari/draw-background.png \"Paint the background\")\n\n6. Switch to a new label.\n\n   ![Switch label](https://ilastik.org/assets/ilastik-napari/new-label.png \"Switch label\")\n\n7. Draw your foreground labels.\n\n   ![Paint cells](https://ilastik.org/assets/ilastik-napari/draw-cells.png \"Paint cells\")\n\n8. Select output types you need, and click _Run_.\n\n   ![Plugin interface](https://ilastik.org/assets/ilastik-napari/interface.png \"Plugin interface\")\n\n9. The plugin will create one layer for each output type, which you save as normal napari layers.\n\n   ![Example output](https://ilastik.org/assets/ilastik-napari/example.png \"Example output\")\n\n## Development\n\nCreate a development environment:\n```\nmamba create -y -n ilastik-napari-dev -c ilastik-forge fastfilters setuptools-scm conda-build anaconda-client\nconda activate napari-ilastik-dev\npip install -e .\n```\n\nBuild conda package:\n```\nconda activate napari-ilastik-dev\nmamba build -c ilastik-forge conda-recipe\nanaconda upload /path/to/the/new/package.tar.bz2\n```\n\nBuild wheel and sdist packages:\n```\nconda activate napari-ilastik-dev\npip install build twine\npython -m build\npython -m twine upload --repository testpypi dist/*\n```\n\n[napari]: https://napari.org/\n[ilastik]: https://www.ilastik.org/\n[conda-user-guide]: https://docs.conda.io/projects/conda/en/latest/user-guide/index.html\n[miniconda]: https://docs.conda.io/en/latest/miniconda.html\n[mambaforge]: https://github.com/conda-forge/miniforge#mambaforge\n[napari-quickstart]: https://napari.org/tutorials/fundamentals/quick_start.html\n[napari-pyqt]: https://napari.org/stable/plugins/best_practices.html#don-t-include-pyside2-or-pyqt5-in-your-plugin-s-dependencies\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "Emil Melnikov <emilmelnikov@gmail.com>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "MIT",
    "classifier": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Plugins",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Framework :: napari",
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "requires_dist": [
      "napari",
      "numpy (>=1.20)",
      "qtpy",
      "scikit-learn",
      "sparse"
    ],
    "requires_python": ">=3.8",
    "requires_external": null,
    "project_url": [
      "homepage, https://github.com/ilastik/ilastik-napari"
    ],
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}