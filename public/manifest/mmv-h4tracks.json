{
  "name": "mmv_h4tracks",
  "display_name": "MMV_H4Tracks",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.1.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "mmv_h4tracks.make_qwidget",
        "title": "Make tracking widget",
        "python_name": "mmv_h4tracks._widget:MMVH4TRACKS",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "mmv_h4tracks.make_qwidget",
        "display_name": "MMV_H4Tracks",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.2",
    "name": "mmv_h4tracks",
    "version": "1.2.0",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "Human in the loop 2d cell migration analysis",
    "description": "# MMV_H4Tracks\n\n[![License](https://img.shields.io/pypi/l/mmv_h4tracks.svg?color=green)](https://github.com/MMV-Lab/mmv_h4tracks/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/mmv_h4tracks.svg?color=green)](https://pypi.org/project/mmv_h4tracks)\n[![Python Version](https://img.shields.io/pypi/pyversions/mmv_h4tracks.svg?color=green)](https://python.org)\n[![tests](https://github.com/MMV-Lab/mmv_h4tracks/workflows/tests/badge.svg)](https://github.com/MMV-Lab/mmv_h4tracks/actions)\n[![codecov](https://codecov.io/gh/MMV-Lab/mmv_h4tracks/branch/main/graph/badge.svg)](https://codecov.io/gh/MMV-Lab/mmv_h4tracks)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/mmv_h4tracks)](https://napari-hub.org/plugins/mmv_h4tracks)\n\nMMV_H4Tracks (Human4Tracks) is a plugin to use with napari for segmenting and tracking cells, which additionally enables user-friendly manual curation of segmentation and tracks and various options for analyzing and evaluating the results.\n\nWe have tested MMV_H4Tracks intensively under Linux and Windows, for Mac there may be problems with parallel computing, which are on our roadmap and will be fixed in a future version.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!-- ## Usage\nLoad a zarr-file consisting of Image, Label and Tracks layer. -->\n\n## Installation\n\nYou can install `mmv_h4tracks` via [pip]:\n\n    pip install mmv_h4tracks\n\n\nBy default, CPU is used for segmentation computing. We did our best to optimize the CPU computing time, but still recommend GPU computing for better performance. For more detailed instructions on how to install GPU support look [here](https://github.com/MouseLand/cellpose#gpu-version-cuda-on-windows-or-linux).\n\n<!-- \n\nTo install latest development version :\n\n    pip install git+https://github.com/MMV-Lab/mmv_h4tracks.git -->\n\n\n## Documentation\nThis plugin was developed to analyze 2D cell migration. It includes the function of segmenting 2D videos using [Cellpose](https://github.com/MouseLand/cellpose) (both CPU and GPU implemented) and then tracking them using different automatic tracking algorithms, depending on the use case. For both segmentation and tracking, we have implemented user-friendly options for manual curation after automatic processing. In conjunction with napari's inherent functionalities, our plugin provides the capability to automatically track data and subsequently process the tracks in three different ways based on the reliability of the automated results. Firstly, any potentially existing incorrect tracks can be rectified in a user-friendly manner, thereby maximizing the evaluation of available information. Secondly, unreliable tracks can be selectively deleted, and thirdly, individual tracks can be manually or semi-automatically created for particularly challenging data, ensuring reliable results. In addition, the manually curated results can be compared with the automatic results in order to obtain a score for the quality of the automatic results. In essence, our tool aims to offer a valuable supplement to the existing fully automated tracking tools and a user-friendly means to analyze videos where fully automated tracking has been previously challenging.\n\nCommon metrics such as speed, cell size, velocity, etc... can then be extracted, plotted and exported from the tracks obtained in this way. Furthermore, the plugin incorporates a functionality to assess the automatic tracking outcomes using a [quality score](https://doi.org/10.1371/journal.pone.0144959). Since automated tracking may not be consistently 100% accurate, presenting a quality measure alongside scientific discoveries becomes essential. This supplementary metric offers researchers valuable insights into the dependability of the produced tracking results, fostering informed data interpretation and decision-making in the analysis of cell migration.\n\nMore detailed information and instructions on each topic can be found in the following sections.\n\n### Get started\n\nTo load your raw data, you can simply drag & drop them into napari. Ensure that the 'Image' combobox displays the correct layer afterward, see example: \n\n![Comboboxes](https://github.com/MMV-Lab/mmv_h4tracks/blob/main/docs/figures/combobox.png?raw=true)\n\nTo load your own segmentation, you can do equivalent.\n\nThe \"save as\" button can be used to save the existing layers (raw, segmentation, tracks) in a single .zarr file, which can be loaded again later using the \"load\" button. The \"save\" button overwrites the loaded .zarr file.\n\nThe computation mode is used to set how many of the available CPU cores (40% or 80%) are to be used for computing the CPU segmentation and tracking and therefore has a direct impact on performance.\n\n\n### Segmentation\n\nFor segmentation, we use the state of the art instance segmentation method Cellpose. We provide a model that we trained and has proven successful for our application ([see more information](https://doi.org/10.1038/s41467-023-43765-3)).\n\n\n#### Automatic instance segmentation\n\nTo start automatic segmentation, a model must first be selected. Automatic segmentation can then be started via \"Run Segmentation\". The \"Preview\" option offers the possibility of segmenting the first 5 frames first in order to obtain an estimate of the expected results, as the computation - depending on the data and hardware - can be time-consuming.\n\n\n##### Custom models\n\nThe plugin supports adding custom Cellpose models. To do so, simply click on \"Add custom Cellpose model\", enter a name to be displayed, select the model path and pass the required parameters. Click [here](https://cellpose.readthedocs.io/en/latest/api.html#id0) for more information about the parameters.\n\n\nTo train your own Cellpose model, [this](https://cellpose.readthedocs.io/en/latest/train.html) might be helpful.\nIn future versions, we plan to support fine-tuning of Cellpose models within the plugin. \n\n\n#### Manual curation\n\nWe provide different options to correct the automatic segmentation:\n\n- `Remove cell` - Click on a cell to remove it. Be aware that removing a cell will split the track the cell belongs to, potentially affecting subsequent tracking.\n- `Next free ID` - Loads the next free label ID, then a false negative cell can be manually annotated using the paint mode.\n- `Select ID` - Click on a cell to load its ID, then this cell can be corrected manually using the paint mode.\n- `Merge cell` - Click on 2 different fragments of the same cell to harmonize their ID. Note: This has no effect on the annotation itself.\n- `Separate` - Click on a cell to assign a new ID to it.\n\n\n### Tracking\n\nThe plugin supports both coordinate-based (LAP) and overlap-based tracking. Overlap-based tracking requires more computation, but can also be used in particularly complicated data for individual cells.\nIn our experience, coordinate-based tracking has proven itself in cases with reliable segmentation. Overlap-based tracking serves as a useful complement in cases where the segmentation is not of sufficient quality.\n\nIf necessary, overlap-based tracking can also be used for single cells. To do this, simply click on the cell after clicking the button.\n\n#### Manual curation\n\nTo correct tracks, the plugin allows you to link or unlink them. For both options, first click on the corresponding button and then on the cell in the respective frame. The action must then be confirmed using the previously clicked button, which now displays \"confirm\".\n\nTo unlink, all you need to do is click on the cell in the first and last frame. So if the cell is tracked from frame 1-100 and the track between frames 1-10 is to be deleted, it is sufficient to click on the cell in frames 1 and 10. If the track is to be deleted between frames 40-60, it is sufficient to click in frames 40 and 60. In this scenario, the rest of the track is then split, i.e. once into a track from frame 1-40 and once into a track from frame 60-100.\n\nIn contrast, to link cells, the corresponding cell in each frame must be clicked. This must be done for all frames, so the track must be gapless.\n\n#### Visualize & filter tracks\n\nThe displayed tracks can be filtered by entering specific track IDs. Click on the \"Show all tracks\" button to display all tracks again.\n\nIndividual tracks can be deleted using the delete function. Note: These are permanently deleted and cannot be restored without re-tracking. In addition, all displayed tracks can be deleted.\n\n### Analysis\n\nThe plugin supports the calculation of various metrics, which can be divided into two categories: migration-based (such as speed, direction, ...) and shape-based (such as size, eccentricity, ...). Through the use of these metrics, a comprehensive understanding of the available data can be obtained.\n\nAll these metrics can be exported to a .csv file. In addition, the tracks can be filtered with a movement minimum (in pixels) and a minimum track length (in frames). Note: All existing tracks are exported in any case, but their results are presented separately.\n \nThe plugin offers the option of filtering the existing tracks according to the metrics. To do this, the corresponding metric can be selected in the plot area and a scatter plot of the data points will be generated using the plot button. Individual data points (/tracks) that are to be displayed can be circled with the mouse and all tracks that are not circled will be hidden. Note: No tracks are deleted in this process. Hiding tracks triggers the filter function in the tracking section, the \"Show all tracks\" button can display all tracks again as described above.\n\n\n### Evaluation\n\nTo be aware of the accuracy of your automatic tracking and segmentation results, we have implemented an option to evaluate your automatic results. Evaluation is always carried out against the latest results of automatic segmentation and automatic tracking or previously created results loaded via the plugin's own load function. We may implement the option to evaluate external segmentations in the future, but for now you can use save and load as a workaround.\n\nTo evaluate results, at least two consecutive frames must be manually corrected first. The plugin saves the previously mentioned automatic or loaded results in the background, so no activation via button or similar is necessary before manual correction.\n\nThe range of frames to be evaluated can be set, for which the results for segmentation and tracking can be calculated independently of each other. \n\n\n#### Segmentation evaluation\n\nIn order to evaluate the segmentation results, a segmentation must first be loaded via the plugin's load function (drag & drop via napari is not sufficient) or computed within the plugin. This can then be corrected manually. For IoU, Dice and Average Precision 50 scores are then calculated for the frames specified by the user. These results are not exported automatically and must therefore be noted down by users themselves.\n\n#### Tracking evaluation\n\nAs for the evaluation of the segmentation, tracking results loaded via the plugin or obtained within the plugin are required. At least 2 consecutive frames must be corrected manually so that a score can be calculated for the quality of the tracking results. More information can be found [here](https://doi.org/10.1371/journal.pone.0144959).\n\n\n### Assistant\n\nThe assistant tab serves to facilitate the identification of errors within segmentation and tracking. It is divided into filters and segmentation adaptation.\n\nRecommended filter strategy:\n1. \"Show noteworthy tracks\" to discover tracks that are not close to the edge and emerge or disappear after the movie starts. Tracks must be gapless, and resulting hits can be indications of errors.\n2. \"Show small cells\" to double-check if there is any noise/pollution segmented.\n3. \"Show untracked cells\" to identify untracked segmented instances. \n\nThe other filters can provide additional support.\n\nThe segmentation adaptation functions supplement useful functions with respect to segmentation. \"Align segmentation IDs\" adapts the label IDs with regard to the tracking IDs (the label IDs are then no longer arbitrary). \"Relabel cells\" ensures that the labels within a frame are unique, which helps eliminate accidental errors during manual segmentation correction.\n\n\n## Hotkeys\n\nHere's an overview of the hotkeys. All of them can also be found in the corresponding tooltips. \n\n- `W` - Load next free segmentation ID\n- `G` - Overlap-based single cell tracking \n- `H` - Separate cells\n- `Q` - Select cell ID \n\n\n## Development plan\n\nWe will continue to develop the plugin and implement new features in the future. Some of our plans in arbitrary order:\n\n- Feedback (progress bar) for computationally intensive functions\n- Support of lineages\n- Support training custom Cellpose models within the plugin\n- Model optimization to further optimize segmentation computation\n- Support evaluation of external segmentations\n- Improve robustness of Mac computing\n- ...\n\nIf you have a feature request, please [file an issue].\n\n## Resources\n\nThe following resources may be of interest:\n\n- [napari](https://napari.org/)\n- [Cellpose](https://doi.org/10.1038/s41592-020-01018-x)\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"mmv_h4tracks\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/MMV-Lab/mmv_h4tracks/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "Lennart Kowitz <lennart.kowitz@isas.de>, Justin Sonneck <justin.sonneck@isas.de>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "Copyright (c) 2022, lennart kowitz\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of mmv_h4tracks nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "classifier": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: BSD License"
    ],
    "requires_dist": [
      "numpy",
      "npe2",
      "napari-plugin-engine>=0.1.4",
      "napari",
      "zarr",
      "cellpose==2.1.0",
      "matplotlib",
      "aicsimageio",
      "scipy>=1.11.0"
    ],
    "requires_python": ">=3.9",
    "requires_external": null,
    "project_url": [
      "Homepage, https://github.com/MMV-Lab/mmv_h4tracks",
      "Bug Tracker, https://github.com/MMV-Lab/mmv_h4tracks/issues",
      "Documentation, https://github.com/MMV-Lab/mmv_h4tracks#README.md",
      "Source Code, https://github.com/MMV-Lab/mmv_h4tracks",
      "User Support, https://github.com/MMV-Lab/mmv_h4tracks/issues"
    ],
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}