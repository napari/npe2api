{
  "name": "napari-ISM",
  "display_name": "Napari-ISM",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-ISM.get_reader",
        "title": "Open data with Adaptive Pixel Reassignment",
        "python_name": "napari_ism._reader:napari_get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.write_multiple",
        "title": "Save multi-layer data with Adaptive Pixel Reassignment",
        "python_name": "napari_ism._writer:write_multiple",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.write_single_image",
        "title": "Save image data with Adaptive Pixel Reassignment",
        "python_name": "napari_ism._writer:write_single_image",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.make_sample_data",
        "title": "Load sample data from Adaptive Pixel Reassignment",
        "python_name": "napari_ism._sample_data:make_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.APR_stack",
        "title": "Calculate adaptive pixel reassignment on a single dataset or a z-stack",
        "python_name": "napari_ism._widget:APR_stack",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.Fingerprint",
        "title": "Calculate the fingeprint of a dataset",
        "python_name": "napari_ism._widget:Fingerprint",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.SumSPAD",
        "title": "Generate an image by summing all the channels",
        "python_name": "napari_ism._widget:SumSPAD",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.MultiImgDeconvolution",
        "title": "Perform multi-image deconvolution",
        "python_name": "napari_ism._widget:MultiImgDeconvolution",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.SimulatePSFs",
        "title": "Simulate a dataset of PSFs",
        "python_name": "napari_ism._widget:SimulatePSFs",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.integrateDims",
        "title": "Sum the dataset along the specified dimensions",
        "python_name": "napari_ism._widget:integrateDims",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.Focus_ISM",
        "title": "Apply focus-ISM on a single dataset",
        "python_name": "napari_ism._widget:Focus_ISM",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-ISM.FRC",
        "title": "Calculate the FRC curve and resolution from a 3D image (x,y,t)",
        "python_name": "napari_ism._widget:FRC",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "napari-ISM.get_reader",
        "filename_patterns": [
          "*.npy",
          "*.h5"
        ],
        "accepts_directories": false
      }
    ],
    "writers": [
      {
        "command": "napari-ISM.write_multiple",
        "layer_types": [
          "image*",
          "labels*"
        ],
        "filename_extensions": [],
        "display_name": ""
      },
      {
        "command": "napari-ISM.write_single_image",
        "layer_types": [
          "image"
        ],
        "filename_extensions": [
          ".npy",
          ".h5"
        ],
        "display_name": ""
      }
    ],
    "widgets": [
      {
        "command": "napari-ISM.APR_stack",
        "display_name": "APR_stack",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.Fingerprint",
        "display_name": "Fingerprint",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.SumSPAD",
        "display_name": "Sum",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.MultiImgDeconvolution",
        "display_name": "Deconvolution",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.SimulatePSFs",
        "display_name": "PSFs",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.integrateDims",
        "display_name": "integrateDims",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.Focus_ISM",
        "display_name": "Focus_ISM",
        "autogenerate": true
      },
      {
        "command": "napari-ISM.FRC",
        "display_name": "FRC",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "napari-ISM.make_sample_data",
        "key": "unique_id.1",
        "display_name": "ISM dataset"
      }
    ],
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-ISM",
    "version": "1.0.7",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "A Napari plugin for analysing and simulating ISM images",
    "description": "# napari-ISM\n\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-ISM)](https://napari-hub.org/plugins/napari-ISM)\n[![License](https://img.shields.io/pypi/l/napari-ISM.svg?color=green)](https://github.com/VicidominiLab/napari-ISM/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-ISM.svg?color=green)](https://pypi.org/project/napari-ISM)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-ISM.svg?color=green)](https://python.org)\n\n\nThis plugin is built upon the python package [BrightEyes-ISM]. Napari-ISM enables the simulation, loading, and analysis of ISM datasets.\nMore in detail, it performs:\n\n* Loading and compression of .h5 files generated by the [MCS software].\n* Simulation of a realistic dataset of tubulin filaments.\n* Simulation of realistic ISM Point Spread Functions.\n* Summing over the detector array dimension\n* Adaptive Pixel Reassignment\n* Multi-image deconvolution\n* Focus-ISM\n\n----------------------------------\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-ISM` via [PyPI]:\n\n    pip install napari-ISM\n    \nor by using [napari hub].\n\nIt requires the following Python packages\n\n    numpy\n    scipy\n    h5py\n    PyQt5\n    brighteyes-ism>=1.2.0\n\n## Documentation\n\nTo generate a simulated dataset, go to `File > Open Sample > ISM dataset`. \n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/sample.png)\n\nTo acces the plugin list, go to `Plugins > Napari-ISM`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/plugin_list.png)\n\nTo open a .h5 file, go to `File > Open `.\nYou can then sum over the dimensions that are not needed, using the command `integrateDims`.\nThe default axes are 0 (repetition), 1 (axial position), and 4 (time).\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/file.png)\n\nNote that all the analysis commands expect an input with size `X x Y X Ch`.\n\nTo see the result of summing over the SPAD dimensions `Ch`, use the plugin command `Sum`. Then, press `Run`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/sum.png)\n\nTo see the result of Adaptive Pixel Reassignment, use the plugin command `APR_stack`.\nSelect as reference image (`ref`) the central one. Select an upsampling factor (`usf`), \nwhich corresponds to the sub-pixel precision of the shift-vector estimation. Then, press `Run`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/apr.png)\n\nTo generate the PSFs, use the plugin command `PSFs`. Select an image layer (`img layer`), \nit will be used to determine the number of pixels and the pixel size.\nThen, select the detector pixel size (`pxsize`) and pixel pitch (`pxpitch`) in microns.\nSelect the magnification of the system (`M`). Select the excitation (`exWl`) and emission wavelength (`emWl`) in nanometers.\nThen, press `Run`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/PSF.png)\n\nTo see the result of multi-image deconvolution, use the plugin command `Deconvolution`.\nSelect an image layer (`img layer`) containing the ISM dataset to deconvolve and another image layer (`psf layer`) containing the PSFs, either simulated or experimental.\nThen, press `Run`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/deconv.png)\n\nTo use Focus-ISM, first select a region on the input dataset using a `shapes` layer.\nSelect a rectangle containing mainly in-focus emitters. It will be used as a calibration.\nThen, use the plugin command `Focus-ISM`. Select an image layer (`img layer`) containing the ISM dataset and a shape layer (`shape layer`) defining the calibration region.\nSelect a lower bound for the standard deviation of the out-of-focus curve (`sigma B bound`) in units of standard deviations of the in-focus term. We suggest to never select a value below 2.\nSelect a threshold (`threshold`) in units of photon counts. Scan coordinates with less photons than the threshold will be skipped in the analysis and classified as background. Then, press `Run`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/shapes.png)\n\nTo use FRC, prepare the dataset to be in the shape `xyt`.\nSelect the theshodling method (`method`) and smoothing method (`smoothing`) among those available.\nThen, press `Calculate`.\n\n![](https://github.com/VicidominiLab/napari-ISM/raw/main/docs/frc.png)\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [GNU LGPL v3.0] license,\n\"napari-ISM\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/VicidominiLab/napari-ISM/issues\n\n[napari hub]: https://www.napari-hub.org/plugins/napari-ISM\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/project/napari-ISM/\n\n[BrightEyes-ISM]: https://github.com/VicidominiLab/BrightEyes-ISM\n[MCS software]: https://github.com/VicidominiLab/BrightEyes-MCS\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": "https://github.com/VicidominiLab/napari-ISM",
    "download_url": null,
    "author": "Alessandro Zunino",
    "author_email": "Alessandro Zunino <alessandro.zunino@iit.it>",
    "maintainer": null,
    "maintainer_email": null,
    "license": null,
    "classifier": [
      "Framework :: napari",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
    ],
    "requires_dist": [
      "numpy",
      "scipy",
      "h5py",
      "PyQt5",
      "brighteyes-ism >=1.2.2",
      "tox ; extra == 'testing'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'",
      "pytest-qt ; extra == 'testing'",
      "napari ; extra == 'testing'",
      "pyqt5 ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "requires_external": null,
    "project_url": [
      "Homepage, https://github.com/VicidominiLab/napari-ism",
      "Documentation, https://brighteyes-ism.readthedocs.io"
    ],
    "provides_extra": [
      "testing"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}