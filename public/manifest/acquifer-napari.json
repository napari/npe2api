{
  "name": "acquifer-napari",
  "display_name": "acquifer-napari",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "acquifer-napari.get_reader",
        "title": "Get Reader",
        "python_name": "acquifer_napari_plugin._reader:napari_get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "acquifer-napari.get_reader",
        "filename_patterns": [
          "*"
        ],
        "accepts_directories": true
      }
    ],
    "writers": null,
    "widgets": null,
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "acquifer-napari",
    "version": "0.0.1",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "Loader plugin for napari, to load Acquifer Imaging Machine datasets in napari, using dask for efficient lazy data-loading.",
    "description": "# acquifer-napari\n\nThe acquifer-napari plugin allow loading IM04 dataset directory, as multi-dimensional images in napari.  \nSliders for well, channel, time and Z are automatically rendered when there are more than 1 coordinates along the dimension.  \nThe plugin uses Dask-Image for efficient data-loading \"on request\" similar to the VirtualStack in ImageJ.  \n\n## Installation\nVia the napari plugin manager : acquifer-napari.\nOr with pip : `pip install acquifer-napari`.\n\nUse `pip install -e .` to install in developement mode, so any change in the source code is directly reflected.  \nUse `npe2 list` to check that the plugin is correctly installed and visible by napari.  \nFor instance here, the package defines 1 command, which is a reader.  \nOne could have more commands, which would be implement other types.   \nThis should output something like following \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name                         \u2502 Version \u2502 Npe2 \u2502 Contributions                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 acquifer-napari              \u2502 0.0.1   \u2502 \u2705   \u2502 commands (1), readers (1)\n\nThe plugin should be installed in an environment with napari installed.  \nNapari can be started with the `napari`command in a command prompt with a system wide python installation.  \nOnce installed, napari can be opened in a IPython interactive session with\n\n```python\n>> import napari\n>> napari.Viewer()\n```\n\n## Configurations\nThe file `napari.yaml` in `acquifer_napari_plugin` defines what functions of the python package are visible to napari.  \nThe top level `name` field must be the same than the python package name defined in `setup.cfg`.\nIt first define a set of commands, which have a custom `id`, and a `python_name`, which is the actual location of the function in the python package (or module).  \nThen the napari.yaml has optional subsections `readers`, `writers`, `widget`, to reference some of the commands previously defined, to notify napari that they implemente those standard functions.  \nFor instance I first define a command myReader pointing to myPackage.myReader, and I reference that command using the id it in the section readers  \nSee https://napari.org/stable/plugins/first_plugin.html#add-a-napari-yaml-manifest  \n\n\n## Issues\nIf you encounter any problems, please [file an issue](https://github.com/LauLauThom/acquifer-napari/issues) along with a detailed description.\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": "Laurent Thomas",
    "author_email": null,
    "maintainer": null,
    "maintainer_email": null,
    "license": "GPL-3.0-only",
    "classifier": [
      "Framework :: napari",
      "Topic :: Software Development :: Testing",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
    ],
    "requires_dist": [
      "acquifer",
      "napari"
    ],
    "requires_python": ">=3.7",
    "requires_external": null,
    "project_url": [
      "HomePage, https://acquifer.de",
      "Twitter, https://twitter.com/myacquifer",
      "Bug Tracker, https://github.com/acquifer/acquifer-napari/issues",
      "Documentation, https://github.com/acquifer/acquifer-napari#README.md",
      "Source Code, https://github.com/acquifer/acquifer-napari"
    ],
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}