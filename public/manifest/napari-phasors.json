{
  "name": "napari-phasors",
  "display_name": "Napari Phasors",
  "visibility": "public",
  "icon": "",
  "categories": [
    "Annotation",
    "Segmentation",
    "Acquisition"
  ],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-phasors.get_reader",
        "title": "Open data with Napari Phasors",
        "python_name": "napari_phasors._reader:napari_get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.convallaria_FLIM_sample_data",
        "title": "Load convallaria FLIM sample data",
        "python_name": "napari_phasors._sample_data:convallaria_FLIM_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.embryo_FLIM_sample_data",
        "title": "Load FLUTE's FLIM Embryo sample data",
        "python_name": "napari_phasors._sample_data:embryo_FLIM_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.paramecium_HSI_sample_data",
        "title": "Load Paramecium Hyperspectral Image sample data",
        "python_name": "napari_phasors._sample_data:paramecium_HSI_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.plot_phasor",
        "title": "Plot Phasor",
        "python_name": "napari_phasors:PlotterWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.write_ome_tiff",
        "title": "Write OME-TIFF",
        "python_name": "napari_phasors:write_ome_tiff",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.PhasorTransform",
        "title": "Phasor Custom Import",
        "python_name": "napari_phasors:PhasorTransform",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.WriterWidget",
        "title": "Export Phasor",
        "python_name": "napari_phasors:WriterWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "napari-phasors.get_reader",
        "filename_patterns": [
          "*.fbd",
          "*.ptu",
          "*.lsm",
          "*ome.tif",
          "*.tif",
          "*.sdt"
        ],
        "accepts_directories": false
      }
    ],
    "writers": [
      {
        "command": "napari-phasors.write_ome_tiff",
        "layer_types": [
          "image*",
          "labels*"
        ],
        "filename_extensions": [],
        "display_name": "Export Phasor to OME-TIFF"
      }
    ],
    "widgets": [
      {
        "command": "napari-phasors.PhasorTransform",
        "display_name": "Phasor Custom Import",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.plot_phasor",
        "display_name": "Phasor Plot",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.WriterWidget",
        "display_name": "Export Phasor",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "napari-phasors.convallaria_FLIM_sample_data",
        "key": "unique_id.1",
        "display_name": "Convallaria FLIM"
      },
      {
        "command": "napari-phasors.embryo_FLIM_sample_data",
        "key": "unique_id.2",
        "display_name": "FLUTE's FLIM Embryo sample data FLIM"
      },
      {
        "command": "napari-phasors.paramecium_HSI_sample_data",
        "key": "unique_id.3",
        "display_name": "Paramecium Hyperspectral Image"
      }
    ],
    "themes": null,
    "menus": {
      "napari/file/io_utilities": [
        {
          "when": null,
          "group": null,
          "submenu": "io_phasors_submenu"
        }
      ],
      "napari/layers/visualize": [
        {
          "when": null,
          "group": null,
          "submenu": "phasor_plot_submenu"
        }
      ],
      "napari/layers/data": [
        {
          "when": null,
          "group": null,
          "submenu": "io_phasors_submenu"
        }
      ],
      "phasor_plot_submenu": [
        {
          "command": "napari-phasors.plot_phasor",
          "when": null,
          "group": null,
          "alt": null
        }
      ],
      "io_phasors_submenu": [
        {
          "command": "napari-phasors.PhasorTransform",
          "when": null,
          "group": null,
          "alt": null
        },
        {
          "command": "napari-phasors.WriterWidget",
          "when": null,
          "group": null,
          "alt": null
        }
      ]
    },
    "submenus": [
      {
        "id": "phasor_plot_submenu",
        "label": "Phasors",
        "icon": null
      },
      {
        "id": "io_phasors_submenu",
        "label": "Phasors",
        "icon": null
      }
    ],
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.4",
    "name": "napari-phasors",
    "version": "0.1",
    "dynamic": [
      "license-file"
    ],
    "platform": null,
    "supported_platform": null,
    "summary": "A simple plugin to use phasor analysis",
    "description": "# napari-phasors\n\n[![License BSD-3](https://img.shields.io/pypi/l/napari-phasors.svg?color=green)](https://github.com/napari-phasors/napari-phasors/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-phasors.svg?color=green)](https://pypi.org/project/napari-phasors)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-phasors.svg?color=green)](https://python.org)\n[![tests](https://github.com/napari-phasors/napari-phasors/workflows/tests/badge.svg)](https://github.com/napari-phasors/napari-phasors/actions)\n[![codecov](https://codecov.io/gh/napari-phasors/napari-phasors/branch/main/graph/badge.svg)](https://codecov.io/gh/napari-phasors/napari-phasors)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-phasors)](https://napari-hub.org/plugins/napari-phasors)\n\nA comprehensive plugin for phasor analysis in napari. Based on the \n[phasorpy](https://www.phasorpy.org/) library.\n\n[Jump to Intallation](#installation)\n\n----------------------------------\n\n## Usage\n\nnapari-phasors is a comprehensive plugin that provides a complete workflow \nfor phasor analysis in napari. It includes widgets for reading various FLIM \nand hyperspectral file formats, performing phasor analysis, calibration, \ncomponent analysis, FRET analysis, filtering, manual selections, and \nexporting results.\n\n### Sample Data\n\nTwo sample datasets for FLIM are provided, along with their corresponding \ncalibration images. Additionally, a paramecium image is included as sample \ndata for hyperspectral analysis.\n\n![sample_data](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/samples.gif)\n\n### Phasor Analysis\n\n#### Plot FLIM Data\n\nFLIM phasor data can be plotted as a 2D histogram or scatter plot in the\n\"Phasor Plot\" widget. The colormap, the number of bins and the scale of the \ncolors can be customized.\n\n![phasors_flim](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/flim%20plot.gif)\n\n#### Plot Hyperspectral Data\n\nHyperspectral phasor data can also be plotted as a 2D histogram or scatter \nplot and visualized in the full universal circle. The \n'Universal Semi-Circle/Full Polar Plot' in the \"Plot Settings\" tab must be\nunchecked.\n\n![phasors_hyperspectral](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/hsi%20plot.gif)\n\n### Phasor Calibration\n\nFLIM images can be calibrated using a reference image acquired under the same \nexperimental parameters in the \"Calibration\" tab of the \"Phasor Plot\" widget. \nThis reference image should consist of a homogeneous solution of a fluorophore\nwith a known fluorescence lifetime and the laser frequency used in the \nexperiment. This ensures accuracy and consistency in lifetime measurements.\n\n![calibration](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/calibration.gif)\n\n### Filtering and Thresholding\n\nApply various filters and thresholds to your phasor data to enhance analysis \nquality in the \"Filter/Threshold\" tab on the \"Phasor Plot\" widget. You can \nfilter phasor coordinates using the median or wavelet filter.\n\n![filter_threshold](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/filter%20threshold.gif)\n\n### Manual Phasor Selections\n\nCreate manual selections on the phasor plot to identify specific regions of \ninterest. These selections can be used to highlight corresponding pixels in \nthe intensity image and perform targeted analysis. Shape of selection can be\nchosen at the top of the phasor plot and the selection ID can be selected in\nthe \"Selection\" tab of the \"Phasor Plot\" widget.\n\n![selections](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/selections.gif)\n\n\n### Component Analysis\n\nPerform multi-component analysis to identify and separate different \nfluorescent species in your sample. This feature allows you to decompose \ncomplex phasor distributions into individual components with distinct \nlifetimes. Two component analysis can be done in the \"Components\" tab of the\n\"Phasor Plot\" widget.\n\n![components](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/components.gif)\n\n### Apparent or Normal Lifetime Analysis\n\nA FLIM image can be colormapped according to the phase or modulation apparent \nlifetime, as well as the normal lifetime in the \"Lifetime\" tab of the \"Phasor \nPlot\" widget. A histogram is also created for visualization of the distribution\nof apparent lifetimes of the FLIM image.\n\n![lifetimes](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/lifetime.gif)\n\n### FRET Analysis\n\nAnalyze F\u00f6rster Resonance Energy Transfer (FRET) trajectories and efficiencies\nin the \"FRET\" tab of the \"Phasor Plot\" widget.\n\n![fret](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/fret.gif)\n\n\n### Phasor Custom Import\n\nSupported file formats (`.tif`, `.ptu`, `.sdt`, `.fbd`, `.lsm`, `.ome.tif`) \ncan be read and transformed to the phasor space in the \"Phasor Custom Import\" widget.\nAdditional options, such as the harmonics, channels and frames, can be \nspecified depending on the file format to be read.\n\n![custom_import](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/import.gif)\n\n### Data Export\n\nThe average intensity image and the phasor coordinates can be exported as \nOME-TIF files that can be read by napari-phasors and PhasorPy. Alternatively, \nthe phasor coordinates, as well as the selections can be exported \nas a CSV file. This can be done in the \"Export Phasor\" widget\n\n![export_phasors](https://github.com/napari-phasors/napari-phasors-data/raw/main/gifs/export.gif)\n\n## Installation\n\nYou can install `napari-phasors` via [pip]. Follow these steps from a \nterminal.\n\nWe recommend using `miniforge` whenever possible. Click \n[here](https://github.com/conda-forge/miniforge?tab=readme-ov-file#miniforge) \nto choose the right download option for your OS.\n**If you do not use `miniforge`, but rather Anaconda or Miniconda, replace \nthe `mamba` term whenever you see it below with `conda`.**\n\nCreate a conda environment with napari by typing :\n\n    mamba create -n napari-phasors-env napari pyqt python=3.10\n    \nActivate the environment :\n\n    mamba activate napari-phasors-env\n\nInstall `napari-phasors` via [pip] :\n\n    pip install napari-phasors\n\nAlternatively, install latest development version with :\n\n    pip install git+https://github.com/napari-phasors/napari-phasors.git\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-phasors\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed \ndescription.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/napari-phasors/napari-phasors/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "Bruno Pannunzio <bpannunzio@pasteur.edu.uy>, Marcelo Leomil Zoccoler <marzoccoler@gmail.com>, Bruno Schuty <schutyb@schutyb.com>, Leonel Malacrida <lmalacrida@pasteur.edu.uy>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "Copyright (c) 2024, Marcelo L. Zoccoler, Bruno Pannunzio, Bruno Schuty\nand Leonel Malacrida. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "classifier": [
      "Development Status :: 2 - Pre-Alpha",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "requires_dist": [
      "phasorpy==0.7",
      "qtpy",
      "scikit-image",
      "biaplotter>=0.4.2",
      "lfdfiles",
      "fbdfile",
      "sdtfile",
      "ptufile",
      "tifffile",
      "pandas",
      "pyqt5",
      "pawflim",
      "tox; extra == \"testing\"",
      "pytest; extra == \"testing\"",
      "pytest-cov; extra == \"testing\"",
      "pytest-qt; extra == \"testing\"",
      "napari; extra == \"testing\"",
      "qtpy; extra == \"testing\"",
      "scikit-image; extra == \"testing\"",
      "biaplotter>=0.4.2; extra == \"testing\"",
      "PyQt5; extra == \"testing\"",
      "pandas; extra == \"testing\"",
      "black; extra == \"testing\"",
      "isort; extra == \"testing\"",
      "phasorpy==0.7; extra == \"testing\"",
      "tifffile; extra == \"testing\"",
      "lfdfiles; extra == \"testing\"",
      "fbdfile; extra == \"testing\"",
      "sdtfile; extra == \"testing\"",
      "ptufile; extra == \"testing\"",
      "pawflim; extra == \"testing\""
    ],
    "requires_python": ">=3.11",
    "requires_external": null,
    "project_url": [
      "Homepage, https://github.com/napari-phasors/napari-phasors",
      "Bug Tracker, https://github.com/napari-phasors/napari-phasors/issues",
      "Documentation, https://github.com/napari-phasors/napari-phasors#README.md",
      "Source Code, https://github.com/napari-phasors/napari-phasors",
      "User Support, https://github.com/napari-phasors/napari-phasors/issues"
    ],
    "provides_extra": [
      "testing"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}