{
  "name": "napari-phasors",
  "display_name": "Napari Phasors",
  "visibility": "public",
  "icon": "",
  "categories": [
    "Annotation",
    "Segmentation",
    "Acquisition"
  ],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-phasors.get_reader",
        "title": "Open data with Napari Phasors",
        "python_name": "napari_phasors._reader:napari_get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.convallaria_FLIM_sample_data",
        "title": "Load convallaria FLIM sample data",
        "python_name": "napari_phasors._sample_data:convallaria_FLIM_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.embryo_FLIM_sample_data",
        "title": "Load FLUTE's FLIM Embryo sample data",
        "python_name": "napari_phasors._sample_data:embryo_FLIM_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.paramecium_HSI_sample_data",
        "title": "Load Paramecium Hyperspectral Image sample data",
        "python_name": "napari_phasors._sample_data:paramecium_HSI_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.plot_phasor",
        "title": "Plot Phasor",
        "python_name": "napari_phasors:PlotterWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.write_ome_tiff",
        "title": "Write OME-TIFF",
        "python_name": "napari_phasors:write_ome_tiff",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.PhasorTransform",
        "title": "Phasor Custom Import",
        "python_name": "napari_phasors:PhasorTransform",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.CalibrationWidget",
        "title": "Calibration Widget",
        "python_name": "napari_phasors:CalibrationWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.WriterWidget",
        "title": "Export Phasor",
        "python_name": "napari_phasors:WriterWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-phasors.LifetimeWidget",
        "title": "Plot lifetime image",
        "python_name": "napari_phasors:LifetimeWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "napari-phasors.get_reader",
        "filename_patterns": [
          "*.fbd",
          "*.ptu",
          "*.lsm",
          "*ome.tif",
          "*.tif",
          "*.sdt"
        ],
        "accepts_directories": false
      }
    ],
    "writers": [
      {
        "command": "napari-phasors.write_ome_tiff",
        "layer_types": [
          "image*",
          "labels*"
        ],
        "filename_extensions": [],
        "display_name": "Export Phasor to OME-TIFF"
      }
    ],
    "widgets": [
      {
        "command": "napari-phasors.PhasorTransform",
        "display_name": "Phasor Custom Import",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.CalibrationWidget",
        "display_name": "Calibration Widget",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.plot_phasor",
        "display_name": "Phasor Plot",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.LifetimeWidget",
        "display_name": "Lifetime Widget",
        "autogenerate": false
      },
      {
        "command": "napari-phasors.WriterWidget",
        "display_name": "Export Phasor",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "napari-phasors.convallaria_FLIM_sample_data",
        "key": "unique_id.1",
        "display_name": "Convallaria FLIM"
      },
      {
        "command": "napari-phasors.embryo_FLIM_sample_data",
        "key": "unique_id.2",
        "display_name": "FLUTE's FLIM Embryo sample data FLIM"
      },
      {
        "command": "napari-phasors.paramecium_HSI_sample_data",
        "key": "unique_id.3",
        "display_name": "Paramecium Hyperspectral Image"
      }
    ],
    "themes": null,
    "menus": {
      "napari/file/io_utilities": [
        {
          "when": null,
          "group": null,
          "submenu": "io_phasors_submenu"
        }
      ],
      "napari/layers/visualize": [
        {
          "when": null,
          "group": null,
          "submenu": "phasor_plot_submenu"
        },
        {
          "when": null,
          "group": null,
          "submenu": "lifetimes_submenu"
        }
      ],
      "napari/layers/transform": [
        {
          "when": null,
          "group": null,
          "submenu": "calibration_submenu"
        }
      ],
      "napari/layers/data": [
        {
          "when": null,
          "group": null,
          "submenu": "io_phasors_submenu"
        }
      ],
      "phasor_plot_submenu": [
        {
          "command": "napari-phasors.plot_phasor",
          "when": null,
          "group": null,
          "alt": null
        }
      ],
      "calibration_submenu": [
        {
          "command": "napari-phasors.CalibrationWidget",
          "when": null,
          "group": null,
          "alt": null
        }
      ],
      "lifetimes_submenu": [
        {
          "command": "napari-phasors.LifetimeWidget",
          "when": null,
          "group": null,
          "alt": null
        }
      ],
      "io_phasors_submenu": [
        {
          "command": "napari-phasors.PhasorTransform",
          "when": null,
          "group": null,
          "alt": null
        },
        {
          "command": "napari-phasors.WriterWidget",
          "when": null,
          "group": null,
          "alt": null
        }
      ]
    },
    "submenus": [
      {
        "id": "phasor_plot_submenu",
        "label": "Phasors",
        "icon": null
      },
      {
        "id": "calibration_submenu",
        "label": "Phasors",
        "icon": null
      },
      {
        "id": "lifetimes_submenu",
        "label": "Lifetimes",
        "icon": null
      },
      {
        "id": "io_phasors_submenu",
        "label": "Phasors",
        "icon": null
      }
    ],
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-phasors",
    "version": "0.0.1",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "A simple plugin to use phasor analysis",
    "description": "# napari-phasors\n\n[![License BSD-3](https://img.shields.io/pypi/l/napari-phasors.svg?color=green)](https://github.com/napari-phasors/napari-phasors/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-phasors.svg?color=green)](https://pypi.org/project/napari-phasors)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-phasors.svg?color=green)](https://python.org)\n[![tests](https://github.com/napari-phasors/napari-phasors/workflows/tests/badge.svg)](https://github.com/napari-phasors/napari-phasors/actions)\n[![codecov](https://codecov.io/gh/napari-phasors/napari-phasors/branch/main/graph/badge.svg)](https://codecov.io/gh/napari-phasors/napari-phasors)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-phasors)](https://napari-hub.org/plugins/napari-phasors)\n\nA simple plugin to do phasor analysis in napari. Based on the [phasorpy](https://www.phasorpy.org/) library.\n\n[Jump to Intallation](#installation)\n\n----------------------------------\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/stable/plugins/index.html\n-->\n\n## Usage\n\nnapari-phasors is composed of a few widgets that allow reading a few specific FLIM and hyperspectral file formats, perform phasor analysis, and display and export the results of manual phasor selections.\n\n### Sample Data\n\nTwo sample datasets for FLIM are provided, along with their corresponding calibration images. Additionally, a paramecium image is included as sample data for hyperspectral analysis.\n\n![sample_data](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/sample_data.gif)\n\n### Phasor Analysis\n\n#### Plot FLIM Data\n\nFLIM phasor data can be plotted as a 2D histogram or scatter plot. The colormap, the number of bins and the scale of the colors can be customized.\nFiltering and thresholding can also be applied to process phasor data and the mean intensity image. \n\n![phasors_flim](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/phasors_flim.gif)\n\n#### Plot Hyperspectral Data\n\nHyperspectral phasor data can also be plotted as a 2D histogram or scatter plot and visualized in the full universal circle.\n\n![phasors_hyperspectral](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/phasors_hyperspectral.gif)\n\n### Apparent Lifetime Display\n\nA FLIM image can be colormapped according to the phase or modulation apparent lifetime. A histogram is also created for visualization of the distribution of apparent lifetimes of the FLIM image.\n\n![lifetimes](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/lifetimes.gif)\n\n### Phasor Calibration\n\nFLIM images can be calibrated using a reference image acquired under the same experimental parameters. This reference image should consist of a homogeneous solution of a fluorophore with a known fluorescence lifetime and the laser frequency used in the experiment. This ensures accuracy and consistency in lifetime measurements.\n\n![calibration](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/calibration.gif)\n\n### Phasor Custom Import\n\nSupported file formats (`.tif`, `.ptu`, `.sdt`, `.fbd`, `.lsm`, `.ome.tif`) can be read and transformed to the phasor space. Additional options, such as the harmonics, channels and frames, can be specified depending on the file format to be read.\n\n![custom_import](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/custom_import.gif)\n\n### Phasor Export\n\nThe average intensity image and the phasor coordinates can be exported as OME-TIF files that can be read by napari-phasors and PhasorPy. Alternatively, the phasor coordinates, as well as the selections (cursors) can be exported as a CSV file.\n\n![export_phasors](https://github.com/napari-phasors/napari-phasors/raw/main/gifs/export_phasors.gif)\n\n## Installation\n\nYou can install `napari-phasors` via [pip]. Follow these steps from a terminal.\n\nWe recommend using `miniforge` whenever possible. Click [here](https://github.com/conda-forge/miniforge?tab=readme-ov-file#miniforge) to choose the right download option for your OS.\n**If you do not use `miniforge`, but rather Anaconda or Miniconda, replace the `mamba` term whenever you see it below with `conda`.**\n\nCreate a conda environment with napari by typing :\n\n    mamba create -n napari-phasors-env napari pyqt python=3.10\n    \nActivate the environment :\n\n    mamba activate napari-phasors-env\n\nInstall `napari-phasors` via [pip] :\n\n    pip install napari-phasors\n\nAlternatively, install latest development version with :\n\n    pip install git+https://github.com/napari-phasors/napari-phasors.git\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-phasors\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/napari-phasors/napari-phasors/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": "https://github.com/napari-phasors/napari-phasors",
    "download_url": null,
    "author": "Bruno Pannunzio, Marcelo L. Zoccoler, Bruno Schuty",
    "author_email": "bpannunzio@pasteur.edu.uy, marzoccoler@gmail.com, schutyb@schutyb.com",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3-Clause",
    "classifier": [
      "Development Status :: 2 - Pre-Alpha",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "requires_dist": [
      "phasorpy",
      "qtpy",
      "scikit-image",
      "biaplotter>=0.0.5a2",
      "lfdfiles",
      "sdtfile",
      "ptufile",
      "tifffile",
      "pandas",
      "tox; extra == \"testing\"",
      "pytest; extra == \"testing\"",
      "pytest-cov; extra == \"testing\"",
      "pytest-qt; extra == \"testing\"",
      "napari; extra == \"testing\"",
      "qtpy; extra == \"testing\"",
      "scikit-image; extra == \"testing\"",
      "biaplotter>=0.0.5a0; extra == \"testing\"",
      "PyQt5; extra == \"testing\"",
      "pandas; extra == \"testing\"",
      "black; extra == \"testing\"",
      "isort; extra == \"testing\"",
      "phasorpy; extra == \"testing\"",
      "tifffile; extra == \"testing\"",
      "lfdfiles; extra == \"testing\"",
      "sdtfile; extra == \"testing\"",
      "ptufile; extra == \"testing\""
    ],
    "requires_python": ">=3.10",
    "requires_external": null,
    "project_url": [
      "Bug Tracker, https://github.com/napari-phasors/napari-phasors/issues",
      "Documentation, https://github.com/napari-phasors/napari-phasors#README.md",
      "Source Code, https://github.com/napari-phasors/napari-phasors",
      "User Support, https://github.com/napari-phasors/napari-phasors/issues"
    ],
    "provides_extra": [
      "testing"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}