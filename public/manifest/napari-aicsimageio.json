{
  "name": "napari-aicsimageio",
  "display_name": "napari-aicsimageio",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.1.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-aicsimageio.get_reader",
        "title": "Get AICSImageIO Reader",
        "python_name": "napari_aicsimageio.core:get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "napari-aicsimageio.get_reader",
        "filename_patterns": [
          "*.1sc",
          "*.2fl",
          "*.3fr",
          "*.acff",
          "*.acqp",
          "*.afi",
          "*.afm",
          "*.aim",
          "*.al3d",
          "*.ali",
          "*.am",
          "*.amiramesh",
          "*.ano",
          "*.apl",
          "*.arf",
          "*.array-like",
          "*.arw",
          "*.avi",
          "*.bay",
          "*.bif",
          "*.bin",
          "*.bip",
          "*.bmp",
          "*.bmq",
          "*.bsdf",
          "*.bufr",
          "*.bw",
          "*.c01",
          "*.cap",
          "*.cat",
          "*.cfg",
          "*.ch5",
          "*.cif",
          "*.cine",
          "*.cr2",
          "*.crw",
          "*.cs1",
          "*.csv",
          "*.ct",
          "*.ct.img",
          "*.cur",
          "*.cut",
          "*.cxd",
          "*.czi",
          "*.dat",
          "*.db",
          "*.dc2",
          "*.dcm",
          "*.dcr",
          "*.dcx",
          "*.dds",
          "*.df3",
          "*.dicom",
          "*.dm2",
          "*.dm3",
          "*.dng",
          "*.drf",
          "*.dsc",
          "*.dti",
          "*.dv",
          "*.ecw",
          "*.emf",
          "*.eps",
          "*.epsi",
          "*.erf",
          "*.exp",
          "*.exr",
          "*.fake",
          "*.fdf",
          "*.fff",
          "*.ffr",
          "*.fid",
          "*.fit",
          "*.fits",
          "*.flc",
          "*.flex",
          "*.fli",
          "*.fpx",
          "*.frm",
          "*.ftc",
          "*.fts",
          "*.ftu",
          "*.fz",
          "*.g3",
          "*.gbr",
          "*.gdcm",
          "*.gel",
          "*.gif",
          "*.gipl",
          "*.grey",
          "*.grib",
          "*.h5",
          "*.hdf",
          "*.hdf5",
          "*.hdp",
          "*.hdr",
          "*.hed",
          "*.his",
          "*.htd",
          "*.htm",
          "*.html",
          "*.hx",
          "*.i2i",
          "*.ia",
          "*.icns",
          "*.ico",
          "*.ics",
          "*.ids",
          "*.iff",
          "*.iim",
          "*.iiq",
          "*.im",
          "*.im3",
          "*.img",
          "*.imggz",
          "*.ims",
          "*.inf",
          "*.inr",
          "*.ipl",
          "*.ipm",
          "*.ipw",
          "*.j2c",
          "*.j2k",
          "*.jfif",
          "*.jif",
          "*.jng",
          "*.jp2",
          "*.jpc",
          "*.jpe",
          "*.jpeg",
          "*.jpf",
          "*.jpg",
          "*.jpk",
          "*.jpx",
          "*.jxr",
          "*.k25",
          "*.kc2",
          "*.kdc",
          "*.klb",
          "*.koa",
          "*.l2d",
          "*.labels",
          "*.lbm",
          "*.lei",
          "*.lfp",
          "*.lfr",
          "*.lif",
          "*.liff",
          "*.lim",
          "*.lms",
          "*.lsm",
          "*.mdb",
          "*.mdc",
          "*.mef",
          "*.mgh",
          "*.mha",
          "*.mhd",
          "*.mic",
          "*.mkv",
          "*.mnc",
          "*.mnc2",
          "*.mng",
          "*.mod",
          "*.mos",
          "*.mov",
          "*.mp4",
          "*.mpeg",
          "*.mpg",
          "*.mpo",
          "*.mrc",
          "*.mri",
          "*.mrw",
          "*.msp",
          "*.msr",
          "*.mtb",
          "*.mvd2",
          "*.naf",
          "*.nd",
          "*.nd2",
          "*.ndpi",
          "*.ndpis",
          "*.nef",
          "*.nhdr",
          "*.nia",
          "*.nii",
          "*.nii.gz",
          "*.niigz",
          "*.npz",
          "*.nrrd",
          "*.nrw",
          "*.obf",
          "*.oib",
          "*.oif",
          "*.oir",
          "*.ome",
          "*.ome.tif",
          "*.ome.tiff",
          "*.orf",
          "*.par",
          "*.pbm",
          "*.pcd",
          "*.pcoraw",
          "*.pct",
          "*.pcx",
          "*.pef",
          "*.pfm",
          "*.pgm",
          "*.pic",
          "*.pict",
          "*.png",
          "*.pnl",
          "*.ppm",
          "*.pr3",
          "*.ps",
          "*.psd",
          "*.ptx",
          "*.pxn",
          "*.pxr",
          "*.qptiff",
          "*.qtk",
          "*.r3d",
          "*.raf",
          "*.ras",
          "*.raw",
          "*.rcpnl",
          "*.rdc",
          "*.rec",
          "*.rgb",
          "*.rgba",
          "*.rw2",
          "*.rwl",
          "*.rwz",
          "*.scan",
          "*.scn",
          "*.sdt",
          "*.seq",
          "*.sif",
          "*.sld",
          "*.sm2",
          "*.sm3",
          "*.spc",
          "*.spe",
          "*.spi",
          "*.sr2",
          "*.srf",
          "*.srw",
          "*.st",
          "*.sti",
          "*.stk",
          "*.stp",
          "*.svs",
          "*.swf",
          "*.sxm",
          "*.targa",
          "*.tfr",
          "*.tga",
          "*.thm",
          "*.tif",
          "*.tiff",
          "*.tim",
          "*.tnb",
          "*.top",
          "*.txt",
          "*.v",
          "*.vff",
          "*.vms",
          "*.vsi",
          "*.vtk",
          "*.vws",
          "*.wap",
          "*.wat",
          "*.wav",
          "*.wbm",
          "*.wbmp",
          "*.wdp",
          "*.webp",
          "*.wlz",
          "*.wmf",
          "*.wmv",
          "*.wpi",
          "*.xbm",
          "*.xdce",
          "*.xml",
          "*.xpm",
          "*.xqd",
          "*.xqf",
          "*.xv",
          "*.xys",
          "*.zfp",
          "*.zfr",
          "*.zip",
          "*.zpo",
          "*.zvi"
        ],
        "accepts_directories": false
      }
    ],
    "writers": null,
    "widgets": null,
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-aicsimageio",
    "version": "0.7.2",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "AICSImageIO bindings for napari",
    "description": "# napari-aicsimageio\n\n[![License](https://img.shields.io/pypi/l/napari-aicsimageio.svg?color=green)](https://github.com/AllenCellModeling/napari-aicsimageio/raw/main/LICENSE)\n[![Build Status](https://github.com/AllenCellModeling/napari-aicsimageio/workflows/Build%20Main/badge.svg)](https://github.com/AllenCellModeling/napari-aicsimageio/actions)\n[![Code Coverage](https://codecov.io/gh/AllenCellModeling/napari-aicsimageio/branch/main/graph/badge.svg)](https://codecov.io/gh/AllenCellModeling/napari-aicsimageio)\n\nAICSImageIO bindings for napari\n\n---\n\n## Features\n\n-   Supports reading metadata and imaging data for:\n    -   `OME-TIFF`\n    -   `TIFF`\n    -   `CZI` (Zeiss)\n    -   `LIF` (Leica)\n    -   `ND2` (Nikon)\n    -   `DV` (DeltaVision)\n    -   Any formats supported by [aicsimageio](https://github.com/AllenCellModeling/aicsimageio)\n    -   Any formats supported by [bioformats](https://github.com/tlambert03/bioformats_jar)\n        -   `SLD` (Slidebook)\n        -   `SVS` (Aperio)\n        -   [Full List](https://docs.openmicroscopy.org/bio-formats/6.5.1/supported-formats.html)\n    -   Any additional format supported by [imageio](https://github.com/imageio/imageio)\n        -   `PNG`\n        -   `JPG`\n        -   `GIF`\n        -   `AVI`\n        -   [Full List](https://imageio.readthedocs.io/en/v2.4.1/formats.html)\n\n_While upstream `aicsimageio` is released under BSD-3 license, this plugin is released under GPLv3 license because it installs all format reader dependencies._\n\n## Installation\n\n**Stable Release:** `pip install napari-aicsimageio` or `conda install napari-aicsimageio -c conda-forge`<br>\n**Development Head:** `pip install git+https://github.com/AllenCellModeling/napari-aicsimageio.git`\n\n### Reading Mode Threshold\n\nThis image reading plugin will load the provided image directly into memory if it meets\nthe following two conditions:\n\n1. The filesize is less than 4GB.\n2. The filesize is less than 30% of machine memory available.\n\nIf either of these conditions isn't met, the image is loaded in chunks only as needed.\n\n### Use napari-aicsimageio as the Reader for All File Formats\n\nIf you want to force napari to always use this plugin as the reader for all file formats,\ntry running this snippet:\n\n```python\nfrom napari.settings import get_settings\n\nget_settings().plugins.extension2reader = {'*': 'napari-aicsimageio', **get_settings().plugins.extension2reader}\n```\n\nFor more details, see [#37](https://github.com/AllenCellModeling/napari-aicsimageio/issues/37).\n\n## Examples of Features\n\n#### General Image Reading\n\nAll image file formats supported by\n[aicsimageio](https://github.com/AllenCellModeling/aicsimageio) will be read and all\nraw data will be available in the napari viewer.\n\nIn addition, when reading an OME-TIFF, you can view all OME metadata directly in the\nnapari viewer thanks to `ome-types`.\n\n![screenshot of an OME-TIFF image view, multi-channel, z-stack, with metadata viewer](https://raw.githubusercontent.com/AllenCellModeling/napari-aicsimageio/main/images/ome-tiff-with-metadata-viewer.png)\n\n#### Multi-Scene Selection\n\nWhen reading a multi-scene file, a widget will be added to the napari viewer to manage\nscene selection (clearing the viewer each time you change scene or adding the\nscene content to the viewer) and a list of all scenes in the file.\n\n![gif of drag and drop file to scene selection and management](https://raw.githubusercontent.com/AllenCellModeling/napari-aicsimageio/main/images/scene-selection.gif)\n\n#### Access to the AICSImage Object and Metadata\n\n![napari viewer with console open showing `viewer.layers[0].metadata`](https://raw.githubusercontent.com/AllenCellModeling/napari-aicsimageio/main/images/console-access.png)\n\nYou can access the `AICSImage` object used to load the image pixel data and\nimage metadata using the built-in napari console:\n\n```python\nimg = viewer.layers[0].metadata[\"aicsimage\"]\nimg.dims.order  # TCZYX\nimg.channel_names  # [\"Bright\", \"Struct\", \"Nuc\", \"Memb\"]\nimg.get_image_dask_data(\"ZYX\")  # dask.array.Array\n```\n\nThe napari layer metadata dictionary also stores a shorthand\nfor the raw image metadata:\n\n```python\nviewer.layers[0].metadata[\"raw_image_metadata\"]\n```\n\nThe metadata is returned in whichever format is used by the underlying\nfile format reader, i.e. for CZI the raw metadata is returned as\nan `xml.etree.ElementTree.Element`, for OME-TIFF the raw metadata is returned\nas an `OME` object from `ome-types`.\n\nLastly, if the underlying file format reader has an OME metadata conversion function,\nyou may additionally see a key in the napari layer metadata dictionary\ncalled `\"ome_types\"`. For example, because the AICSImageIO\n`CZIReader` and `BioformatsReader` both support converting raw image metadata\nto OME metadata, you will see an `\"ome_types\"` key that stores the metadata transformed\ninto the OME metadata model.\n\n```python\nviewer.layers[0].metadata[\"ome_types\"]  # OME object from ome-types\n```\n\n#### Mosaic Reading\n\nWhen reading CZI or LIF images, if the image is a mosaic tiled image, `napari-aicsimageio`\nwill return the reconstructed image:\n\n![screenshot of a reconstructed / restitched mosaic tile LIF](https://raw.githubusercontent.com/AllenCellModeling/napari-aicsimageio/main/images/tiled-lif.png)\n\n## Development\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for information related to developing the code.\n\nFor additional file format support, contributed directly to\n[AICSImageIO](https://github.com/AllenCellModeling/aicsimageio).\nNew file format support will become directly available in this\nplugin on new `aicsimageio` releases.\n\n## Citation\n\nIf you find `aicsimageio` _(or `napari-aicsimageio`)_ useful, please cite as:\n\n> AICSImageIO Contributors (2021). AICSImageIO: Image Reading, Metadata Conversion, and Image Writing for Microscopy Images in Pure Python [Computer software]. GitHub. https://github.com/AllenCellModeling/aicsimageio\n\n_Free software: GPLv3_\n",
    "description_content_type": "text/markdown",
    "keywords": "aicsimageio,CZI,image reading,imageio,LIF,metadata,napari,ND2,TIFF",
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "Eva Maxfield Brown <evamaxfieldbrown@gmail.com>, Talley Lambert <talley.lambert@gmail.com>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "GPLv3",
    "classifier": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Scientific/Engineering"
    ],
    "requires_dist": [
      "aicsimageio[all] (>=4.6.3)",
      "fsspec[http] (>=2022.7.1)",
      "napari (>=0.4.11)",
      "psutil (>=5.7.0)",
      "aicspylibczi (>=3.0.5)",
      "bioformats-jar",
      "readlif (>=0.6.4)",
      "black (>=19.10b0) ; extra == 'dev'",
      "coverage (>=5.1) ; extra == 'dev'",
      "docutils (<0.16,>=0.10) ; extra == 'dev'",
      "flake8-debugger (>=3.2.1) ; extra == 'dev'",
      "flake8-pyprojecttoml ; extra == 'dev'",
      "flake8 (>=3.8.3) ; extra == 'dev'",
      "ipython (>=7.15.0) ; extra == 'dev'",
      "isort (>=5.7.0) ; extra == 'dev'",
      "mypy (>=0.800) ; extra == 'dev'",
      "pytest-runner (>=5.2) ; extra == 'dev'",
      "twine (>=3.1.1) ; extra == 'dev'",
      "wheel (>=0.34.2) ; extra == 'dev'",
      "PyQt5 ; extra == 'test'",
      "pytest (>=5.4.3) ; extra == 'test'",
      "pytest-qt (~=4.0) ; extra == 'test'",
      "pytest-cov (>=2.9.0) ; extra == 'test'",
      "pytest-raises (>=0.11) ; extra == 'test'",
      "pytest-xvfb (~=2.0) ; extra == 'test'",
      "quilt3 (~=3.4.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "requires_external": null,
    "project_url": [
      "Homepage, https://github.com/AllenCellModeling/napari-aicsimageio",
      "Bug Tracker, https://github.com/AllenCellModeling/napari-aicsimageio/issues",
      "Documentation, https://github.com/AllenCellModeling/napari-aicsimageio#README.md",
      "User Support, https://github.com/AllenCellModeling/napari-aicsimageio/issues"
    ],
    "provides_extra": [
      "dev",
      "test"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}