{
  "name": "cellfinder",
  "display_name": "cellfinder",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.1.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "cellfinder.napari.detect_widget",
        "title": "Create Cell detection",
        "python_name": "cellfinder.napari.detect:detect_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "cellfinder.napari.training_widget",
        "title": "Create Train network",
        "python_name": "cellfinder.napari.train:training_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "cellfinder.napari.CurationWidget",
        "title": "Create Curation",
        "python_name": "cellfinder.napari.curation:CurationWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "cellfinder.napari.SampleData",
        "title": "Sample data",
        "python_name": "cellfinder.napari.sample_data:load_sample",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "cellfinder.napari.detect_widget",
        "display_name": "Cell detection",
        "autogenerate": false
      },
      {
        "command": "cellfinder.napari.training_widget",
        "display_name": "Train network",
        "autogenerate": false
      },
      {
        "command": "cellfinder.napari.CurationWidget",
        "display_name": "Curation",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "cellfinder.napari.SampleData",
        "key": "sample",
        "display_name": "Sample data"
      }
    ],
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.2",
    "name": "cellfinder",
    "version": "1.6.0",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "Automated 3D cell detection in large microscopy images",
    "description": "[![Python Version](https://img.shields.io/pypi/pyversions/cellfinder.svg)](https://pypi.org/project/cellfinder)\n[![PyPI](https://img.shields.io/pypi/v/cellfinder.svg)](https://pypi.org/project/cellfinder)\n[![Downloads](https://pepy.tech/badge/cellfinder)](https://pepy.tech/project/cellfinder)\n[![Wheel](https://img.shields.io/pypi/wheel/cellfinder.svg)](https://pypi.org/project/cellfinder)\n[![Development Status](https://img.shields.io/pypi/status/cellfinder.svg)](https://github.com/brainglobe/cellfinder)\n[![Tests](https://img.shields.io/github/actions/workflow/status/brainglobe/cellfinder/test_and_deploy.yml?branch=main)](https://github.com/brainglobe/cellfinder/actions)\n[![codecov](https://codecov.io/gh/brainglobe/cellfinder/branch/main/graph/badge.svg?token=nx1lhNI7ox)](https://codecov.io/gh/brainglobe/cellfinder)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)\n[![Contributions](https://img.shields.io/badge/Contributions-Welcome-brightgreen.svg)](https://brainglobe.info/community/developers/index.html)\n[![Twitter](https://img.shields.io/twitter/follow/brain_globe?style=social)](https://twitter.com/brain_globe)\n\n# cellfinder\n\ncellfinder is software for automated 3D cell detection in very large 3D images (e.g., serial two-photon or lightsheet volumes of whole mouse brains).\nThere are three different ways to interact and use it, each with different user interfaces and objectives in mind.\nFor more details, head over to [the documentation website](https://brainglobe.info/documentation/cellfinder/index.html).\n\nAt a glance:\n\n- There is a command-line interface called [brainmapper](https://brainglobe.info/documentation/brainglobe-workflows/brainmapper/index.html) that integrates [with `brainreg`](https://github.com/brainglobe/brainreg) for automated cell detection and classification. You can install it through [`brainglobe-workflows`](https://brainglobe.info/documentation/brainglobe-workflows/index.html).\n- There is a [napari plugin](https://brainglobe.info/documentation/cellfinder/user-guide/napari-plugin/index.html) for interacting graphically with the cellfinder tool.\n- There is a [Python API](https://brainglobe.info/documentation/cellfinder/user-guide/cellfinder-core.html) to allow users to integrate BrainGlobe tools into their custom workflows.\n\n## Installation\n\nYou can find [the installation instructions](https://brainglobe.info/documentation/cellfinder/installation.html#installation) on the BrainGlobe website, which will go into more detail about the installation process if you want to minimise your installation to suit your needs.\nHowever, we recommend that users install `cellfinder` either through installing BrainGlobe version 1, or (if you also want the command-line interface) installing `brainglobe-workflows`.\n\n```bash\n# If you want to install all BrainGlobe tools, including cellfinder, in a consistent manner with one command:\npip install brainglobe>=1.0.0\n# If you want to install the brainmapper CLI tool as well:\npip install brainglobe-workflows>=1.0.0\n```\n\nIf you only want the `cellfinder` package by itself, you can `pip install` it alone:\n\n```bash\npip install cellfinder>=1.0.0\n```\n\nBe sure to specify a version greater than version `v1.0.0` - prior to this version the `cellfinder` package had a very different structure that is incompatible with BrainGlobe version 1 and the other tools in the BrainGlobe suite.\nSee [our blog posts](https://brainglobe.info/blog/) for more information on the release of BrainGlobe version 1.\n\n## Seeking help or contributing\nWe are always happy to help users of our tools, and welcome any contributions. If you would like to get in contact with us for any reason, please see the [contact page of our website](https://brainglobe.info/contact.html).\n\n## Citation\nIf you find this package useful, and use it in your research, please cite the following paper:\n> Tyson, A. L., Rousseau, C. V., Niedworok, C. J., Keshavarzi, S., Tsitoura, C., Cossell, L., Strom, M. and Margrie, T. W. (2021) \u201cA deep learning algorithm for 3D cell detection in whole mouse brain image datasets\u2019 PLOS Computational Biology, 17(5), e1009074\n[https://doi.org/10.1371/journal.pcbi.1009074](https://doi.org/10.1371/journal.pcbi.1009074)\n\n**If you use this, or any other tools in the brainglobe suite, please\n [let us know](https://brainglobe.info/contact.html), and\n we'd be happy to promote your paper/talk etc.**\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "\"Adam Tyson, Christian Niedworok, Charly Rousseau\" <code@adamltyson.com>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3-Clause",
    "classifier": [
      "Development Status :: 4 - Beta",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.13",
      "Topic :: Scientific/Engineering :: Image Recognition"
    ],
    "requires_dist": [
      "brainglobe-utils>=0.5.0",
      "brainglobe-napari-io>=0.3.4",
      "dask[array]",
      "fancylog>=0.0.7",
      "natsort",
      "numba",
      "numpy",
      "scikit-image",
      "scikit-learn",
      "keras>=3.7.0",
      "torch!=2.4,>=2.1.0",
      "tifffile",
      "tqdm",
      "qt-niu",
      "black; extra == \"dev\"",
      "pre-commit; extra == \"dev\"",
      "pyinstrument; extra == \"dev\"",
      "pytest-cov; extra == \"dev\"",
      "pytest-mock; extra == \"dev\"",
      "pytest-qt; extra == \"dev\"",
      "pytest-timeout; extra == \"dev\"",
      "pytest; extra == \"dev\"",
      "tox; extra == \"dev\"",
      "pooch>=1; extra == \"dev\"",
      "brainglobe-napari-io; extra == \"napari\"",
      "magicgui; extra == \"napari\"",
      "napari-ndtiffs; extra == \"napari\"",
      "napari-plugin-engine>=0.1.4; extra == \"napari\"",
      "napari[pyqt5]; extra == \"napari\"",
      "pooch>=1; extra == \"napari\"",
      "qtpy; extra == \"napari\""
    ],
    "requires_python": ">=3.11",
    "requires_external": null,
    "project_url": [
      "Homepage, https://brainglobe.info/documentation/cellfinder/index.html",
      "Source Code, https://github.com/brainglobe/cellfinder",
      "Bug Tracker, https://github.com/brainglobe/cellfinder/issues",
      "Documentation, https://brainglobe.info/documentation/cellfinder/index.html",
      "User Support, https://forum.image.sc/tag/brainglobe"
    ],
    "provides_extra": [
      "dev",
      "napari"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}