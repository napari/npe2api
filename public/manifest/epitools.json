{
  "name": "epitools",
  "display_name": "EpiTools",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "epitools.get_reader",
        "title": "Open data with EpiTools",
        "python_name": "epitools._reader:napari_get_reader",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.write_single_image",
        "title": "Save an image layer with EpiTools",
        "python_name": "epitools._writer:write_single_image",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.write_single_labels",
        "title": "Save a labels layer with EpiTools",
        "python_name": "epitools._writer:write_single_labels",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.load_sample_data",
        "title": "Load sample data from EpiTools",
        "python_name": "epitools._sample_data:load_sample_data",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.projection_widget",
        "title": "Epitools Projection Widget",
        "python_name": "epitools.main:create_projection_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.projection_2ch_widget",
        "title": "Epitools Projection Widget 2 Channels",
        "python_name": "epitools.main:create_projection_2ch_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.segmentation_widget",
        "title": "Epitools Segmentation Widget",
        "python_name": "epitools.main:create_segmentation_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "epitools.cell_statistics_widget",
        "title": "Epitools cell statistics widget",
        "python_name": "epitools.main:create_cell_statistics_widget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "epitools.get_reader",
        "filename_patterns": [
          "*.tif",
          "*.tiff"
        ],
        "accepts_directories": false
      }
    ],
    "writers": [
      {
        "command": "epitools.write_single_image",
        "layer_types": [
          "image"
        ],
        "filename_extensions": [
          ".tif",
          ".tiff"
        ],
        "display_name": ""
      },
      {
        "command": "epitools.write_single_labels",
        "layer_types": [
          "labels"
        ],
        "filename_extensions": [
          ".tif",
          ".tiff"
        ],
        "display_name": ""
      }
    ],
    "widgets": [
      {
        "command": "epitools.projection_widget",
        "display_name": "Projection (selective plane)",
        "autogenerate": false
      },
      {
        "command": "epitools.projection_2ch_widget",
        "display_name": "Projection (2 channel with reference channel)",
        "autogenerate": false
      },
      {
        "command": "epitools.segmentation_widget",
        "display_name": "Segmentation (local minima seeded watershed)",
        "autogenerate": false
      },
      {
        "command": "epitools.cell_statistics_widget",
        "display_name": "Cell statistics",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "epitools.load_sample_data",
        "key": "test_image",
        "display_name": "EpiTools"
      }
    ],
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "epitools",
    "version": "0.0.12",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "Quantifying 2D cell shape and epithelial tissue dynamics",
    "description": "[![Licence](https://img.shields.io/pypi/l/epitools.svg?color=green)](https://raw.githubusercontent.com/epitools/epitools/main/LICENCE.md)\n[![PyPI](https://img.shields.io/pypi/v/epitools.svg?color=green)](https://pypi.org/project/epitools)\n[![Python Version](https://img.shields.io/pypi/pyversions/epitools.svg?color=green)](https://python.org)\n[![tests](https://github.com/epitools/epitools/actions/workflows/test.yml/badge.svg)](https://github.com/epitools/epitools/actions/workflows/test.yml)\n[![Documentation](https://readthedocs.org/projects/epitools/badge/?version=latest)](https://epitools.readthedocs.io/en/latest/?badge=latest)\n[![coverage](https://coveralls.io/repos/github/epitools/epitools/badge.svg?branch=main)](https://coveralls.io/github/epitools/epitools?branch=main)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/epitools)](https://napari-hub.org/plugins/epitools)\n\n# Welcome to EpiTools!\n\nEpiTools is a Python package and associated [napari](https://napari.org/stable/) plugin to extract the membrane signal from epithelial tissues and analyze it with the aid of computer vision.\n\nThe development of EpiTools was inspired by the challenges in analyzing time-lapses of growing Drosophila imaginal discs.\n\nThe folded morphology, the very small apical cell surfaces and the long time series required a new automated cell recognition to accurately study growth dynamics.\n\n## Installation\n\nFirst, install [napari](https://napari.org/index.html#installation).\n\nThe recommended way to install `EpiTools` is via\n[pip](https://pypi.org/project/pip)\n\n```sh\npython -m pip install epitools\n```\n\nTo install the latest development version of `EpiTools` clone this repository\nand run\n\n```sh\npython -m pip install -e .\n```\n\nIf working on Apple Silicon make sure to also install the following package from\n[conda-forge](https://conda-forge.org).\n\n```sh\nconda install -c conda-forge pyqt\n```\n\n### Recommended Companion Napari Plugins\n\nTo also install the recommended plugins for the `EpiTools` workflow run\n\n```sh\npython -m pip install epitools[wf]\n```\n\nand\n\n```sh\npython -m pip install -e .[wf]\n```\n\nWhen installing with Apple Mac OS X terminal, you might need to add '\"' to [wf] as in:\n\n```sh\npython -m pip install -e .\"[wf]\"\n```\n\nIf working on Apple Silicon make sure to also install the following package from\n[conda-forge](https://conda-forge.org)\n\n```sh\nconda install -c conda-forge cvxopt\n```\n\nwhich is required for [btrack](https://github.com/quantumjot/btrack).\n\n## Issues\n\nIf you encounter any problems, please\n[file an issue](https://github.com/epitools/epitools/issues) along with a\ndetailed description.\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox](https://tox.wiki),\nplease ensure the coverage at least stays the same before you submit a pull request.\n",
    "description_content_type": "text/markdown",
    "keywords": "biology,cell,mechanics,shape,tissue,topology",
    "home_page": "https://www.ucl.ac.uk/lmcb/users/yanlan-mao",
    "download_url": null,
    "author": "Yanlan Mao",
    "author_email": "\"Daniel R. Matthews\" <d.matthews@ucl.ac.uk>, Giulia Paci <g.paci@ucl.ac.uk>, Pablo Vicente Munuera <p.munuera@ucl.ac.uk>, \"Patrick J. Roddy\" <patrick.roddy@ucl.ac.uk>, \"Paul J. Smith\" <paul.j.smith@ucl.ac.uk>, Yanlan Mao <y.mao@ucl.ac.uk>",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD 3-Clause Licence\n\nCopyright (c) 2022-2023, EpiTools Developers All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n    Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "classifier": [
      "Framework :: napari",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Medical Science Apps.",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "requires_dist": [
      "PartSeg",
      "magicgui",
      "matplotlib",
      "napari",
      "networkx",
      "numpy",
      "pandas",
      "scikit-image >=0.20",
      "scipy",
      "black ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pyqt5 ; extra == 'dev'",
      "ruff ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "myst-parser ; extra == 'docs'",
      "pydata-sphinx-theme ; extra == 'docs'",
      "pytz ; extra == 'docs'",
      "sphinx-autobuild ; extra == 'docs'",
      "sphinx <5 ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinxcontrib-video ; extra == 'docs'",
      "types-pytz ; extra == 'docs'",
      "btrack[napari] >=0.6.1 ; extra == 'wf'",
      "napari-segment-blobs-and-things-with-membranes ; extra == 'wf'"
    ],
    "requires_python": ">=3.9",
    "requires_external": null,
    "project_url": [
      "Code, https://github.com/epitools/epitools",
      "Download, https://pypi.org/project/epitools",
      "Homepage, https://github.com/epitools/epitools",
      "Issues, https://github.com/epitools/epitools/issues"
    ],
    "provides_extra": [
      "dev",
      "docs",
      "wf"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}