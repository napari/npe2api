{
  "name": "napari-wsi",
  "display_name": "WSI Reader",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-wsi.wsi_reader_openslide",
        "title": "A reader for whole-slide image data based on openslide.",
        "python_name": "napari_wsi.reader:wsi_reader_openslide",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-wsi.wsi_reader_rasterio",
        "title": "A reader for whole-slide image data based on rasterio.",
        "python_name": "napari_wsi.reader:wsi_reader_rasterio",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-wsi.wsi_reader_widget",
        "title": "A widget for reading whole-slide image data.",
        "python_name": "napari_wsi.widget:WSIReaderWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": [
      {
        "command": "napari-wsi.wsi_reader_openslide",
        "filename_patterns": [
          "*.bif",
          "*.ndpi",
          "*.scn",
          "*.svs"
        ],
        "accepts_directories": false
      },
      {
        "command": "napari-wsi.wsi_reader_rasterio",
        "filename_patterns": [
          "*.tif",
          "*.tiff"
        ],
        "accepts_directories": false
      }
    ],
    "writers": null,
    "widgets": [
      {
        "command": "napari-wsi.wsi_reader_widget",
        "display_name": "WSI Reader",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.4",
    "name": "napari-wsi",
    "version": "1.0.0",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "A plugin to read whole-slide images within napari.",
    "description": "# napari-wsi\n\n[![PyPI](https://img.shields.io/pypi/v/napari-wsi.svg?color=green)](https://pypi.org/project/napari-wsi)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-wsi)](https://napari-hub.org/plugins/napari-wsi)\n[![Tests](https://github.com/AstraZeneca/napari-wsi/actions/workflows/main.yml/badge.svg)](https://github.com/AstraZeneca/napari-wsi/actions)\n![Maturity Level-1](https://img.shields.io/badge/Maturity%20Level-ML--1-yellow)\n\nA plugin to read whole-slide images within [napari].\n\n---\n\n## Installation\n\nYou can install `napari-wsi` via [pip]:\n\n```bash\npip install napari-wsi[all]\n```\n\nThis automatically installs all optional backends, as a shortcut for:\n\n```bash\npip install napari-wsi[openslide,rasterio,wsidicom]\n```\n\nIn addition, to be able to read images using the `openslide` backend, it is\nrequired to install the OpenSlide library itself, for example by installing the\n[openslide-bin] python package (also via [pip]).\n\n# Description\n\nThis [napari] plugin provides a widget for reading various whole-slide image\nformats using a common [zarr] store inteface, based on the libraries\n[openslide], [rasterio], and [wsidicom].\n\n# Quickstart\n\nAfter installation, open the `Plugins` menu in the viewer and select\n`WSI Reader` to open the widget. Then select a `Backend` to use, select a `Path`\nto open, and click `Load`.\n\n![The napari viewer displaying a sample image.](./resources/sample_data.jpg)\n\nIf `sRGB` is selected in the `Color Space` menu and an ICC profile is attached\nto the given image, a transformation to this color space will be applied when\nthe image data is read. Otherwise, the raw RGB image data will be displayed.\n\nThis plugin can also be used to open image files via drag and drop into the\nviewer window. The file suffixes '.bif', '.ndpi', '.scn', '.svs' are registered\nwith the `openslide` backend, while the suffixes '.tif' and '.tiff' are\nregistered with the `rasterio` backend. These files can also be opened directly\nfrom the command line or from a python script:\n\n```bash\nnapari CMU-1.svs\n```\n\n```python\nfrom napari.viewer import Viewer\n\nviewer = Viewer()\nviewer.open(\"CMU-1.svs\", plugin=\"napari-wsi\")\n```\n\n[napari]: https://github.com/napari/napari\n[openslide]: https://github.com/openslide/openslide-python\n[openslide-bin]: https://pypi.org/project/openslide-bin/\n[pip]: https://github.com/pypa/pip\n[rasterio]: https://github.com/rasterio/rasterio\n[wsidicom]: https://github.com/imi-bigpicture/wsidicom\n[zarr]: https://github.com/zarr-developers/zarr-python\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": null,
    "author_email": "Philipp Plewa <philipp.plewa@astrazeneca.com>",
    "maintainer": null,
    "maintainer_email": "Philipp Plewa <philipp.plewa@astrazeneca.com>, Robert Schweizer <robert.schweizer@astrazeneca.com>",
    "license": null,
    "classifier": [
      "Framework :: napari",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "requires_dist": [
      "dask>=2025.1",
      "magicgui>=0.10",
      "numpy>=1.26",
      "pillow>=11.1",
      "universal-pathlib>=0.2",
      "zarr>=3.0",
      "openslide-python>=1.4; extra == 'all'",
      "rasterio>=1.4; extra == 'all'",
      "wsidicom>=0.22; extra == 'all'",
      "openslide-python>=1.4; extra == 'openslide'",
      "rasterio>=1.4; extra == 'rasterio'",
      "wsidicom>=0.22; extra == 'wsidicom'"
    ],
    "requires_python": ">=3.11",
    "requires_external": null,
    "project_url": [
      "Repository, https://github.com/AstraZeneca/napari-wsi"
    ],
    "provides_extra": [
      "all",
      "openslide",
      "rasterio",
      "wsidicom"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}