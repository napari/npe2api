{
  "name": "napari-nanopyx",
  "display_name": "napari NanoPyx",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-nanopyx.benchmark",
        "title": "Benchmark Liquid Engine methods",
        "python_name": "napari_nanopyx.benchmarking:benchmark_nanopyx",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.estimate_drift_alignment",
        "title": "Estimate Drift Alignment",
        "python_name": "napari_nanopyx.drift_alignment:estimate_drift_alignment",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.apply_drift_alignment",
        "title": "Apply Drift Alignment",
        "python_name": "napari_nanopyx.drift_alignment:apply_drift_alignment",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.estimate_channel_registration",
        "title": "Estimate Channel Registration",
        "python_name": "napari_nanopyx.channel_registration:estimate_channel_registration",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.apply_channel_registration",
        "title": "Apply Channel Registration",
        "python_name": "napari_nanopyx.channel_registration:apply_channel_registration",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.generate_srrf_image",
        "title": "Generate SRRF Image",
        "python_name": "napari_nanopyx.srrf:generate_srrf_image",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.calculate_frc",
        "title": "Calculate FRC",
        "python_name": "napari_nanopyx.squirrel:calculate_frc",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.calculate_decorr_analysis",
        "title": "Calculate Decorrelation Analysis",
        "python_name": "napari_nanopyx.squirrel:calculate_decorr_analysis",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.calculate_error_map",
        "title": "Calculate Error Map",
        "python_name": "napari_nanopyx.squirrel:calculate_error_map",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.generate_esrrf_image",
        "title": "Generate eSRRF Image",
        "python_name": "napari_nanopyx.esrrf:generate_esrrf_image",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-nanopyx.nlm_denoise_image",
        "title": "Non-local Means Denoising",
        "python_name": "napari_nanopyx.nlm_denoising:denoising_img",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "napari-nanopyx.benchmark",
        "display_name": "Benchmark Liquid Engine methods",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.estimate_drift_alignment",
        "display_name": "Estimate Drift Correction",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.apply_drift_alignment",
        "display_name": "Apply Drift Correction",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.estimate_channel_registration",
        "display_name": "Estimate Channel Alignment",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.apply_channel_registration",
        "display_name": "Apply Channel Alignment",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.generate_srrf_image",
        "display_name": "Generate SRRF Image",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.calculate_frc",
        "display_name": "Calculate FRC",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.calculate_decorr_analysis",
        "display_name": "Calculate Decorrelation Analysis",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.calculate_error_map",
        "display_name": "Calculate Error Map",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.generate_esrrf_image",
        "display_name": "Generate eSRRF Image",
        "autogenerate": false
      },
      {
        "command": "napari-nanopyx.nlm_denoise_image",
        "display_name": "Non-local Means Denoising",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-nanopyx",
    "version": "0.1.5",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "napari plugin of Nanoscopy Python library (NanoPyx, the successor to NanoJ) - focused on light microscopy and super-resolution imaging",
    "description": "# napari-nanopyx\n\n<img src=\"https://github.com/HenriquesLab/NanoPyx/blob/main/.github/logo.png\" align=\"right\" width=\"230\"/>\n\n[![License](https://img.shields.io/github/license/HenriquesLab/NanoPyx?color=Green)](https://github.com/HenriquesLab/NanoPyx/blob/main/LICENSE.txt)\n[![PyPI](https://img.shields.io/pypi/v/napari-nanopyx.svg?color=green)](https://pypi.org/project/napari-nanopyx)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-nanopyx.svg?color=green)](https://python.org)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-nanopyx)](https://napari-hub.org/plugins/napari-nanopyx)\n[![Docs](https://img.shields.io/badge/documentation-link-blueviolet)](https://github.com/HenriquesLab/napari-NanoPyx/wiki/3.-Methods)\n[![Wiki](https://img.shields.io/badge/wiki-click_me-blue)](https://github.com/HenriquesLab/napari-NanoPyx/wiki)\n\nnapari plugin of [NanoPyx](https://github.com/HenriquesLab/NanoPyx) (the successor to NanoJ) - focused on light microscopy and super-resolution imaging.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using [@napari]'s [cookiecutter-napari-plugin] template.\n\n## What is the NanoPyx \ud83d\udd2c Library?\n\nNanoPyx is a library specialized in the analysis of light microscopy and super-resolution data.\nIt is a successor to [NanoJ](https://github.com/HenriquesLab/NanoJ-Core), which is a Java library for the analysis of super-resolution microscopy data.\n\nNanoPyx focuses on performance, by heavily exploiting cython aided multiprocessing and simplicity. It implements methods for the bioimage analysis field, with a special emphasis on those developed by the [Henriques Laboratory](https://henriqueslab.github.io/).\nIt will be distributed as a Python Library and also as [Codeless Jupyter Notebooks](https://github.com/HenriquesLab/NanoPyx#codeless-jupyter-notebooks-available), that can be run locally or on Google Colab, and as a [napari plugin](https://github.com/HenriquesLab/napari-NanoPyx).\n\nYou can read more about NanoPyx in our [preprint](https://www.biorxiv.org/content/10.1101/2023.08.13.553080v1).\n\nCurrently it implements the following approaches:\n- A reimplementation of the NanoJ image registration, SRRF and Super Resolution metrics\n- eSRRF\n- Non-local means denoising\n- More to come soon\u2122\n\nif you found this work useful, please cite: [preprint](https://www.biorxiv.org/content/10.1101/2023.08.13.553080v1) and  [![DOI](https://zenodo.org/badge/505388398.svg)](https://zenodo.org/badge/latestdoi/505388398)\n\n## Installation\n\nYou can install `napari-nanopyx` via [pip]:\n\n    pip install napari-nanopyx\n\n## User Documentation\n\nYou can find installation and usage instructions in the [wiki](https://github.com/HenriquesLab/napari-NanoPyx/wiki).\n\n## Contributing\n\nContributions are very welcome.\nPlease read our [Contribution Guidelines](https://github.com/HenriquesLab/NanoPyx/blob/main/CONTRIBUTING.md) to know how to proceed.\n\n## License\n\nDistributed under the terms of the [CC-By v4.0] license,\n\"napari-nanopyx\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[CC-By v4.0]: https://creativecommons.org/licenses/by/4.0/\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n## Citing\n\nIf you found this work useful, please cite: [preprint](https://www.biorxiv.org/content/10.1101/2023.08.13.553080v1) and  [![DOI](https://zenodo.org/badge/505388398.svg)](https://zenodo.org/badge/latestdoi/505388398)\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": "Ricardo Henriques, Bruno Saraiva, In\u00eas Cunha, Ant\u00f3nio Brito",
    "author_email": "bruno.msaraiva2@gmail.com",
    "maintainer": null,
    "maintainer_email": null,
    "license": "LGPL-3.0-only",
    "classifier": [
      "Development Status :: 2 - Pre-Alpha",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Testing"
    ],
    "requires_dist": [
      "napari",
      "nanopyx >=0.3.1",
      "scikit-image",
      "magicgui",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": ">=3.9",
    "requires_external": null,
    "project_url": [
      "Bug Tracker, https://github.com/HenriquesLab/napari-NanoPyx/issues",
      "Documentation, https://github.com/HenriquesLab/napari-NanoPyx/wiki",
      "Source Code, https://github.com/HenriquesLab/napari-NanoPyx",
      "User Support, https://github.com/HenriquesLab/napari-NanoPyx/issues"
    ],
    "provides_extra": [
      "testing"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}