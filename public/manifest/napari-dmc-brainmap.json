{
  "name": "napari-dmc-brainmap",
  "display_name": "dmc_brainmap",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-dmc-brainmap.ParamsWidget",
        "title": "Create params.json file",
        "python_name": "napari_dmc_brainmap.params:ParamsWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.StitchingWidget",
        "title": "Stitch tif images",
        "python_name": "napari_dmc_brainmap.stitching:StitchingWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.PaddingWidget",
        "title": "Padding of stitched images to match atlas resolution",
        "python_name": "napari_dmc_brainmap.padding:PaddingWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.PreprocessingWidget",
        "title": "Make widget to perform preprocessing operations",
        "python_name": "napari_dmc_brainmap.preprocessing:PreprocessingWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.RegistrationWidget",
        "title": "Make registration widget to start registration GUI",
        "python_name": "napari_dmc_brainmap.registration:RegistrationWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.SegmentWidget",
        "title": "Make segmentation widget",
        "python_name": "napari_dmc_brainmap.segment:SegmentWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.ResultsWidget",
        "title": "Make widget to create results file",
        "python_name": "napari_dmc_brainmap.results:ResultsWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-dmc-brainmap.VisualizationWidget",
        "title": "Make widget to visualize data",
        "python_name": "napari_dmc_brainmap.visualization:VisualizationWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "napari-dmc-brainmap.ParamsWidget",
        "display_name": "Create params file (general info -- ALWAYS start with this!)",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.StitchingWidget",
        "display_name": "Stitch tif images",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.PaddingWidget",
        "display_name": "Padding of stitched images to match atlas resolution",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.PreprocessingWidget",
        "display_name": "Preprocessing",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.RegistrationWidget",
        "display_name": "Registration",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.SegmentWidget",
        "display_name": "Segmentation",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.ResultsWidget",
        "display_name": "Create results file",
        "autogenerate": false
      },
      {
        "command": "napari-dmc-brainmap.VisualizationWidget",
        "display_name": "Visualize data",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.4",
    "name": "napari-dmc-brainmap",
    "version": "0.1.7b11",
    "dynamic": [
      "license-file"
    ],
    "platform": null,
    "supported_platform": null,
    "summary": "DMC-BrainMap is an end-to-end tool for multi-feature brain mapping across species",
    "description": "\n# napari-dmc-brainmap\n*DMC-BrainMap is an end-to-end tool for multi-feature brain mapping across species.*  \nThis [napari](https://napari.org/stable/) plugin was generated with [Cookiecutter](https://github.com/cookiecutter/cookiecutter) using napari's [cookiecutter-napari-plugin](https://github.com/napari/cookiecutter-napari-plugin) template.\n\n[![License BSD-3](https://img.shields.io/pypi/l/napari-dmc-brainmap.svg?color=green)](https://github.com/hejDMC/napari-dmc-brainmap/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-dmc-brainmap.svg?color=green)](https://pypi.org/project/napari-dmc-brainmap)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-dmc-brainmap.svg?color=green)](https://python.org)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-dmc-brainmap)](https://napari-hub.org/plugins/napari-dmc-brainmap)\n\n\n## Quick start\nA detailed guide and tutorial can be found on the [Wiki pages of this repo](https://github.com/hejDMC/napari-dmc-brainmap/wiki).\n\n### Installation\n\nDMC-BrainMap is a plugin for [napari](https://napari.org/stable/). Hence, you first need to install napari and subsequently the DMC-BrainMap plugin via the plugin manager. To install napari, we recommend to install napari into a clean virtual environment using *conda* or *venv*. Please refer to the [napari installation guide](https://napari.org/stable/tutorials/fundamentals/installation.html#napari-installation) for more information and [for information on installing napari as a bundled app](https://napari.org/stable/tutorials/fundamentals/installation.html#napari-installation).  \n\n#### Step 1: Setup the virtual environment (Python 3.10)\n\n```\nconda create -y -n napari-env -c conda-forge python=3.10\nconda activate napari-env\n```\n\n#### Step 2: Install napari\n\n```\npython -m pip install \"napari[all]\"\n```\n\n#### Step 3: Install napari-dmc-brainmap\n\nYou can install `napari-dmc-brainmap` via the napari plugin manager or via [pip](https://pypi.org/project/napari-dmc-brainmap/):\n\n    pip install napari-dmc-brainmap\n\n### Usage\n\nPlease refer to the Wiki pages for detailed instructions and a short tutorial on how to use DMC-BrainMap. When working with DMC-BrainMap on your own data, please keep the following points in mind:\n- DMC-BrainMap requires single-channel 16-bit .tif/.tiff images to work (in principle 8-bit also work)\n- DMC-BrainMap requires that your data is organized by animals in separate folders (you can pool data later down the lane)\n- DMC-BrainMap uses 5 channel labels (`dapi`, `green`, `n3`, `cy3`, `cy5`) corresponding to blue, green, orange, red and far red channels. *However, these are only labels, you can assign them as you please. Hence, you can use DMC-BrainMap also for non-fluorescence data given you converted your images to single-channel 16-bit .tif/.tiff images*. Please contact us if you need to use more than 5 channels.\n- It is essential that you structure your data in the following way (hierarchical organization, same name for images in different channels, channel labels are selected by you), **otherwise DMC-BrainMap won't work**:\n```\nanimal_id-001\n\u2502\n\u2514\u2500\u2500\u2500stitched\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500dapi\n\u2502   |    \u2502   animal_id-001_001.tiff\n\u2502   |    \u2502   animal_id-001_002.tiff\n|   \u2502    |   animal_id-001_003.tiff\n\u2502   |    \u2502   animal_id-001_004.tiff\n\u2502   |    \u2502   ...\n\u2502   \u2502   \n\u2502   \u2514\u2500\u2500\u2500green\n\u2502       \u2502   animal_id-001_001.tiff\n\u2502       \u2502   animal_id-001_002.tiff\n\u2502       \u2502   animal_id-001_003.tiff\n\u2502       \u2502   animal_id-001_004.tiff\n\u2502       \u2502   ...\n\u2502   \nanimal_id-2\n\u2502   ...\n```\n\n## Documentation\nDocumentation on DMC-BrainMap's source code can be found on the project's [Read the Docs page](https://napari-dmc-brainmap.readthedocs.io/en/latest/#).\n\n## Seeking help or contributing\n\nDMC-BrainMap is an open-source project, and we welcome contributions of all kinds. If you have any questions, feedback, or suggestions, please feel free to open an issue on this repository. \n\n## License\n\nDistributed under the terms of the [BSD-3](https://github.com/teamdigitale/licenses/blob/master/BSD-3-Clause) license,\n\"napari-dmc-brainmap\" is free and open source software\n\n## Citing DMC-BrainMap\n\nIf you use DMC-BrainMap in your scientific work, please cite:\n```\nJung, F., Cao, X., Heymans, L., Carl\u00e9n, M. (2025) \"DMC-BrainMap - an open-source, end-to-end tool for multi-feature brain mapping across species\", bioRxiv, https://doi.org/10.1101/2025.02.19.639009\n```\n\nBibTeX:\n\n``` bibtex\n@article{Jung2025x,\n   author = {Felix Jung and Xiao Cao and Loran Heymans and Marie Carlen},\n   doi = {10.1101/2025.02.19.639009},\n   journal = {bioRxiv},\n   month = {2},\n   title = {DMC-BrainMap - an open-source, end-to-end tool for multi-feature brain mapping across species},\n   url = {http://biorxiv.org/lookup/doi/10.1101/2025.02.19.639009},\n   year = {2025},\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": null,
    "download_url": null,
    "author": "Felix Jung",
    "author_email": "jung.neurosc@gmail.com",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3-Clause",
    "classifier": [
      "Development Status :: 4 - Beta",
      "Framework :: napari",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "requires_dist": [
      "numpy==1.26.4",
      "pandas==2.0.1",
      "matplotlib==3.8.3",
      "seaborn==0.12.2",
      "scikit-learn==1.4.1.post1",
      "scikit-image==0.22.0",
      "scikit-spatial==7.2.0",
      "tifffile==2023.2.28",
      "magicgui==0.8.1",
      "qtpy==2.4.1",
      "opencv-python==4.9.0.80",
      "natsort==8.4.0",
      "imagecodecs==2024.1.1",
      "mergedeep==1.3.4",
      "aicsimageio==4.14.0",
      "aicspylibczi==3.1.2",
      "aicssegmentation==0.5.3",
      "distinctipy==1.3.4",
      "bg_atlasapi==1.0.2",
      "shapely==2.0.1"
    ],
    "requires_python": "==3.10.*",
    "requires_external": null,
    "project_url": null,
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}