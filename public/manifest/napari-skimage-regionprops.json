{
  "name": "napari-skimage-regionprops",
  "display_name": "napari-skimage-regionprops",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-skimage-regionprops.napari_experimental_provide_function",
        "title": "duplicate_current_frame",
        "python_name": "napari_skimage_regionprops._utilities:napari_experimental_provide_function",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "napari-skimage-regionprops.napari_experimental_provide_function",
        "display_name": "duplicate_current_frame",
        "autogenerate": true
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-skimage-regionprops",
    "version": "0.10.1",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "A regionprops table widget plugin for napari",
    "description": "# napari-skimage-regionprops (nsr)\n\n\n\n[![License](https://img.shields.io/pypi/l/napari-skimage-regionprops.svg?color=green)](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/LICENSE)\n\n[![PyPI](https://img.shields.io/pypi/v/napari-skimage-regionprops.svg?color=green)](https://pypi.org/project/napari-skimage-regionprops)\n\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-skimage-regionprops.svg?color=green)](https://python.org)\n\n[![tests](https://github.com/haesleinhuepf/napari-skimage-regionprops/workflows/tests/badge.svg)](https://github.com/haesleinhuepf/napari-skimage-regionprops/actions)\n\n[![codecov](https://codecov.io/gh/haesleinhuepf/napari-skimage-regionprops/branch/master/graph/badge.svg)](https://codecov.io/gh/haesleinhuepf/napari-skimage-regionprops)\n\n[![Development Status](https://img.shields.io/pypi/status/napari-skimage-regionprops.svg)](https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha)\n\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-skimage-regionprops)](https://napari-hub.org/plugins/napari-skimage-regionprops)\n\n\n\n \n\nA [napari] plugin for measuring properties of labeled objects based on [scikit-image]\n\n\n\n![](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/images/interactive.gif)\n\n\n\n## Usage: measure region properties\n\n\n\nFrom the menu `Tools > Measurement > Regionprops (nsr)` you can open a dialog where you can choose an intensity image, a corresponding label image and the features you want to measure:\n\n\n\n![img.png](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/images/dialog.png)\n\n\n\nIf you want to interface with the labels and see which table row corresponds to which labeled object, use the label picker and\n\nactivate the `show selected` checkbox.\n\n\n\n![](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/images/interactive.png)\n\n\n\nIf you closed a table and want to reopen it, you can use the menu `Tools > Measurements > Show table (nsr)` to reopen it. \n\nYou just need to select the labels layer the properties are associated with.\n\n\n\nFor visualizing measurements with different grey values, as parametric images, you can double-click table headers.\n\n\n\n![img.png](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/images/label_value_visualization.gif)\n\n\n\n## Usage: measure point intensities\n\n\n\nAnalogously, also the intensity and coordinates of point layers can be measured using the menu `Tools > Measurement > Measure intensity at point coordinates (nsr)`. \n\nAlso these measurements can be visualized by double-clicking table headers:\n\n\n\n![img.png](measure_point_intensity.png)\n\n\n\n![img_1.png](measure_point_coordinate.png)\n\n\n\n## Working with time-lapse and tracking data\n\n\n\nNote that tables for time-lapse data should include a column named \"frame\", which indicates which slice in\n\ntime the given row refers to. If you want to import your own csv files for time-lapse data make sure to include this column.\n\nIf you have tracking data where each column specifies measurements for a track instead of a label at a specific time point,\n\nthis column must not be added.\n\n\n\nIn case you have 2D time-lapse data you need to convert it into a suitable shape using the function: `Tools > Utilities > Convert 3D stack to 2D time-lapse (time-slicer)`,\n\nwhich can be found in the [napari time slicer](https://www.napari-hub.org/plugins/napari-time-slicer).\n\n\n\nLast but not least, make sure that in case of time-lapse data the label image has labels that are subsquently labeled per timepoint.\n\nE.g. a dataset where label 5 is missing at timepoint 4 may be visualized incorrectly.\n\n\n\n## Usage: multichannel or multi-label data\n\n\n\nIf you want to relate objects from one channels to objects from another channel, you can use `Tools > Measurement tables > Object Features/Properties (scikit-image, nsr)`. \n\nThis plugin module allos you to answer questions like:\n\n  - how many objects I have inside other objects?\n\n  - what is the average intensity of the objects inside other objects?\n\nFor that, you need at least two labeled images in napari. You can relate objects along with their features. \n\nIf intensity features are also wanted, then you also need to provide two intensity images. \n\nBelow, there is a small example on how to use it. \n\nAlso, take a look at [this example notebook](https://github.com/haesleinhuepf/napari-skimage-regionprops/blob/master/demo/measure_relationship_to_other_channels_plugin.ipynb).\n\n \n\n ![](https://github.com/haesleinhuepf/napari-skimage-regionprops/raw/master/images/things_inside_things_demo.gif)\n\n\n\n## Usage, programmatically\n\n\n\nYou can also control the tables programmatically. See this \n\n[example notebook](https://github.com/haesleinhuepf/napari-skimage-regionprops/blob/master/demo/tables.ipynb) for details on regionprops and\n\n[this example notebook](https://github.com/haesleinhuepf/napari-skimage-regionprops/blob/master/demo/measure_points.ipynb) for details on measuring intensity at point coordinates. For creating parametric map images, see [this notebook](https://github.com/haesleinhuepf/napari-skimage-regionprops/blob/master/demo/map_measurements.ipynb).\n\n\n\n\n\n## Features\n\nThe user can select categories of features for feature extraction in the user interface. These categories contain measurements from the scikit-image [regionprops list of measurements](https://scikit-image.org/docs/dev/api/skimage.measure.html#skimage.measure.regionprops) library:\n\n* size:\n\n  * area\n\n  * bbox_area\n\n  * convex_area\n\n  * equivalent_diameter\n\n* intensity:\n\n  * max_intensity \n\n  * mean_intensity\n\n  * min_intensity\n\n  * standard_deviation_intensity (`extra_properties` implementation using numpy)\n\n* perimeter:\n\n  * perimeter\n\n  * perimeter_crofton\n\n* shape\n\n  * major_axis_length\n\n  * minor_axis_length\n\n  * orientation\n\n  * solidity\n\n  * eccentricity\n\n  * extent\n\n  * feret_diameter_max\n\n  * local_centroid\n\n  * roundness as defined for 2D labels [by ImageJ](https://imagej.nih.gov/ij/docs/menus/analyze.html#set)\n\n  * circularity as defined for 2D labels  [by ImageJ](https://imagej.nih.gov/ij/docs/menus/analyze.html#set)\n\n  * aspect_ratio as defined for 2D labels [by ImageJ](https://imagej.nih.gov/ij/docs/menus/analyze.html#set)\n\n* position:\n\n  * centroid\n\n  * bbox\n\n  * weighted_centroid\n\n* moments:\n\n  * moments\n\n  * moments_central\n\n  * moments_hu\n\n  * moments_normalized\n\n\n\n \n\n\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n\n\n## See also\n\n\n\nThere are other napari plugins with similar functionality for extracting features:\n\n* [morphometrics](https://www.napari-hub.org/plugins/morphometrics)\n\n* [PartSeg](https://www.napari-hub.org/plugins/PartSeg)\n\n* [napari-simpleitk-image-processing](https://www.napari-hub.org/plugins/napari-simpleitk-image-processing)\n\n* [napari-cupy-image-processing](https://www.napari-hub.org/plugins/napari-cupy-image-processing)\n\n* [napari-pyclesperanto-assistant](https://www.napari-hub.org/plugins/napari-pyclesperanto-assistant)\n\n\n\nFurthermore, there are plugins for postprocessing extracted measurements\n\n* [napari-feature-classifier](https://www.napari-hub.org/plugins/napari-feature-classifier)\n\n* [napari-clusters-plotter](https://www.napari-hub.org/plugins/napari-clusters-plotter)\n\n* [napari-accelerated-pixel-and-object-classification](https://www.napari-hub.org/plugins/napari-accelerated-pixel-and-object-classification)\n\n\n\n## Installation\n\n\n\nYou can install `napari-skimage-regionprops` via [pip]:\n\n\n\n    pip install napari-skimage-regionprops\n\n\n\nOr if you plan to develop it:\n\n\n\n    git clone https://github.com/haesleinhuepf/napari-skimage-regionprops\n\n    cd napari-skimage-regionprops\n\n    pip install -e .\n\n\n\nIf there is an error message suggesting that git is not installed, run `conda install git`.\n\n\n\n## Contributing\n\n\n\nContributions are very welcome. Tests can be run with [tox], please ensure\n\nthe coverage at least stays the same before you submit a pull request.\n\n\n\n## License\n\n\n\nDistributed under the terms of the [BSD-3] license,\n\n\"napari-skimage-regionprops\" is free and open source software\n\n\n\n## Issues\n\n\n\nIf you encounter any problems, please create a thread on [image.sc] along with a detailed description and tag [@haesleinhuepf].\n\n\n\n[napari]: https://github.com/napari/napari\n\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n\n[@napari]: https://github.com/napari\n\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[image.sc]: https://image.sc\n\n[napari]: https://github.com/napari/napari\n\n[tox]: https://tox.readthedocs.io/en/latest/\n\n[pip]: https://pypi.org/project/pip/\n\n[PyPI]: https://pypi.org/\n\n[scikit-image]: https://scikit-image.org/\n\n[@haesleinhuepf]: https://twitter.com/haesleinhuepf\n\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": "https://github.com/haesleinhuepf/napari-skimage-regionprops",
    "download_url": null,
    "author": "Marcelo Zoccoler, Robert Haase",
    "author_email": "robert.haase@tu-dresden.de",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3",
    "classifier": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: BSD License"
    ],
    "requires_dist": [
      "napari-plugin-engine (>=0.1.4)",
      "numpy",
      "scikit-image",
      "napari",
      "pandas",
      "napari-tools-menu (>=0.1.19)",
      "napari-workflows",
      "imageio (!=2.22.1)",
      "Deprecated"
    ],
    "requires_python": ">=3.8",
    "requires_external": null,
    "project_url": null,
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": true
}