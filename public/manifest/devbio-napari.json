{
  "name": "devbio-napari",
  "display_name": "devbio-napari",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": null,
    "readers": null,
    "writers": null,
    "widgets": null,
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "devbio-napari",
    "version": "0.11.0",
    "dynamic": null,
    "platform": null,
    "supported_platform": null,
    "summary": "A bundle of napari plugins useful for 3D+t image processing and analysis for studying developmental biology.",
    "description": "# devbio-napari\n\n[![License](https://img.shields.io/pypi/l/devbio-napari.svg?color=green)](https://github.com/haesleinhuepf/devbio-napari/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/devbio-napari.svg?color=green)](https://pypi.org/project/devbio-napari)\n[![Python Version](https://img.shields.io/pypi/pyversions/devbio-napari.svg?color=green)](https://python.org)\n[![tests](https://github.com/haesleinhuepf/devbio-napari/workflows/tests/badge.svg)](https://github.com/haesleinhuepf/napari-plot-profile/actions)\n[![codecov](https://codecov.io/gh/haesleinhuepf/devbio-napari/branch/master/graph/badge.svg)](https://codecov.io/gh/haesleinhuepf/devbio-napari)\n[![Development Status](https://img.shields.io/pypi/status/devbio-napari.svg)](https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/devbio-napari)](https://napari-hub.org/plugins/devbio-napari)\n\n \nA bundle of napari plugins useful for 3D+t image processing and analysis for studying developmental biology.\n\n* [accelerated-pixel-and-object-classification](https://www.napari-hub.org/plugins/napari-accelerated-pixel-and-object-classification)\n  * Instance segmentation\n  * Semantic segmentation\n  * Object classification\n  * Random Forest Classifier training\n* [animation](https://www.napari-hub.org/plugins/napari-animation) \n  * Visualization\n* [blob-detection](https://www.napari-hub.org/plugins/napari-blob-detection)\n  * Detection\n* [brightness-contrast](https://www.napari-hub.org/plugins/napari-brightness-contrast)\n  * Visualization\n* [clusters-plotter](https://www.napari-hub.org/plugins/napari-clusters-plotter)\n  * Visualization\n  * Plotting\n  * Semantic object segmentation\n  * Dimensionality reduction\n  * Unsupervised machine learning\n* [crop](https://www.napari-hub.org/plugins/napari-crop)\n  * Transformation\n* [curtain](https://www.napari-hub.org/plugins/napari-curtain)\n  * Visualization \n* [czifile2](https://www.napari-hub.org/plugins/napari-czifile2)\n  * File input/output\n* [folder-browser](https://www.napari-hub.org/plugins/napari-folder-browser)\n  * File input/output\n* [layer-details-display](https://www.napari-hub.org/plugins/napari-layer-details-display)\n  * Visualization\n* [mouse-controls](https://www.napari-hub.org/plugins/napari-mouse-controls)\n  * Interaction\n* [PlatyMatch](https://www.napari-hub.org/plugins/PlatyMatch)\n  * Image registration\n* [plot-profile](https://www.napari-hub.org/plugins/napari-plot-profile)\n  * Visualization\n  * Quantification\n* [plugin-search](https://www.napari-hub.org/plugins/napari-plugin-search)\n  * Interaction\n* [pyclesperanto-assistant](https://www.napari-hub.org/plugins/napari-pyclesperanto-assistant)\n  * Filtering\n  * Instance segmentation\n  * Semantic segmentation\n  * Quantification\n* [pystackreg](https://www.napari-hub.org/plugins/napari-pystackreg)\n  * Image registration\n  * Motion correction\n* [RedLionfish](https://www.napari-hub.org/plugins/RedLionfish)\n  * Deconvolution\n  * Processing\n* [roi](https://www.napari-hub.org/plugins/napari-roi)\n  * Manual segmentation\n* [segment-blobs-and-things-with-membranes](https://www.napari-hub.org/plugins/napari-segment-blobs-and-things-with-membranes)\n  * Filtering\n  * Instance segmentation\n  * Semantic segmentation\n* [simpleitk-image-processing](https://www.napari-hub.org/plugins/napari-simpleitk-image-processing)\n  * Filtering\n  * Instance segmentation\n  * Semantic segmentation\n  * Quantification\n* [skimage-regionprops](https://www.napari-hub.org/plugins/napari-skimage-regionprops)\n  * Quantification\n* [stl-exporter](https://www.napari-hub.org/plugins/napari-stl-exporter)\n  * File input/output\n* [tabu](https://www.napari-hub.org/plugins/napari-tabu)\n  * Interaction\n* [the-segmentation-game](https://www.napari-hub.org/plugins/the-segmentation-game)\n  * Quantification\n  * Segmentation quality assurance\n* [workflow-inspector](https://www.napari-hub.org/plugins/napari-workflow-inspector)\n  * Visualization\n* [workflow-optimizer](https://www.napari-hub.org/plugins/napari-workflow-optimizer)\n  * Interaction\n  * Optimization\n\n----------------------------------\n\n## Installation\n\nYou can install `devbio-napari` via conda/mamba. If you have never used conda before, please [read this guide first](https://biapol.github.io/blog/mara_lampert/getting_started_with_mambaforge_and_python/readme.html).  \nStart by creating an environment using mamba.\n\n```\nmamba create --name devbio-napari-env napari=0.4.19 python=3.9 devbio-napari pyqt -c conda-forge -c pytorch\n```\n\nAfterwards, activate the environment like this:\n\n```\nmamba activate devbio-napari-env\n```\n\nAfterwards, run this command from the command line\n\n```\nnaparia\n```\n\nThis window should open. It shows the [Assistant](https://www.napari-hub.org/plugins/napari-assistant) graphical user interface. \nRead more about how to use it in its [documentation](https://www.napari-hub.org/plugins/napari-assistant).\n\n![img.png](https://github.com/haesleinhuepf/devbio-napari/raw/master/docs/screenshot.png)\n\n## Troubleshooting: Graphics cards drivers\n\nIn case error messages contains \"ImportError: DLL load failed while importing cl: The specified procedure could not be found\" [see also](https://github.com/clEsperanto/pyclesperanto_prototype/issues/55) or \"\"clGetPlatformIDs failed: PLATFORM_NOT_FOUND_KHR\", please install recent drivers for your graphics card and/or OpenCL device. Select the right driver source depending on your hardware from this list:\n\n* [AMD drivers](https://www.amd.com/en/support)\n* [NVidia drivers](https://www.nvidia.com/download/index.aspx)\n* [Intel GPU drivers](https://www.intel.com/content/www/us/en/download/726609/intel-arc-graphics-windows-dch-driver.html)\n* [Intel CPU OpenCL drivers](https://www.intel.com/content/www/us/en/developer/articles/tool/opencl-drivers.html#latest_CPU_runtime)\n* [Microsoft Windows OpenCL support](https://www.microsoft.com/en-us/p/opencl-and-opengl-compatibility-pack/9nqpsl29bfff)\n\nSometimes, mac-users need to install this:\n\n    conda install -c conda-forge ocl_icd_wrapper_apple\n\nSometimes, linux users need to install this:\n\n    conda install -c conda-forge ocl-icd-system\n\n\nIn case installation didn't work in the first attempt, you may have to call this command line to reset the napari configuration:\n\n```\nnapari --reset\n```\n\n## Troubleshooting: pytorch\n\nIn case pytorch-related plugins fail, install pytorch as explained on [its website](https://pytorch.org/get-started/locally/). Consider replacing `conda` with `mamba` in given instructions.\n\nFor example if you have an NVidia GPU at hand, install pytorch like this:\n```\nmamba install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia\n```\nOr if not:\n```\nmamba install pytorch torchvision torchaudio cpuonly -c pytorch\n```\n\n## Contributing\n\nContributions are very welcome. \nIf you want to [suggest a new napari plugin](https://github.com/haesleinhuepf/devbio-napari/pulls) to become part of this distribution, please make sure it interoperates nicely with the other plugins. \nFor example, if the plugin you suggest provided cell segmentation algorithms, please check if the resulting segmented cells can be analysed using napari-skimage-regionprops.\nFurthermore, please make sure the README of the plugin you are proposing comes with user documentation, e.g. a step-by-step guide with screenshots explaining what users can do with the plugin and how to use it. \nIt is recommended to provide example data as well so that end-users can try out the plugin under conditions it was developed for.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"devbio-napari\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/haesleinhuepf/devbio/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": "https://github.com/haesleinhuepf/devbio-napari",
    "download_url": null,
    "author": "Robert Haase",
    "author_email": "robert.haase@uni-leipzig.de",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3",
    "classifier": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: BSD License"
    ],
    "requires_dist": [
      "napari-plugin-engine>=0.1.4",
      "npe2",
      "numpy>=1.21.4",
      "napari-assistant>=0.4.9",
      "napari-pyclesperanto-assistant>=0.23.0",
      "napari-skimage-regionprops",
      "napari-animation",
      "PlatyMatch",
      "napari-plot-profile",
      "napari-accelerated-pixel-and-object-classification",
      "napari-brightness-contrast",
      "napari-plugin-search",
      "napari-segment-blobs-and-things-with-membranes",
      "napari-simpleitk-image-processing",
      "napari-stl-exporter",
      "napari-folder-browser",
      "napari-crop",
      "napari-clusters-plotter>=0.7.1",
      "napari-tabu",
      "napari-workflow-optimizer",
      "napari-workflow-inspector",
      "napari-curtain",
      "napari-layer-details-display",
      "napari",
      "vispy",
      "napari-mouse-controls",
      "the-segmentation-game",
      "napari-blob-detection",
      "jupyterlab",
      "napari-czifile2",
      "napari-roi",
      "pydantic!=1.10.0",
      "napari-pystackreg",
      "imageio!=2.22.1",
      "redlionfish",
      "jupyter-server",
      "seaborn"
    ],
    "requires_python": ">=3.9",
    "requires_external": null,
    "project_url": [
      "Bug Tracker, https://github.com/haesleinhuepf/devbio-napari/issues",
      "Documentation, https://github.com/haesleinhuepf/devbio-napari#README.md",
      "Source Code, https://github.com/haesleinhuepf/devbio-napari",
      "User Support, https://github.com/haesleinhuepf/devbio-napari/issues"
    ],
    "provides_extra": null,
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": true
}