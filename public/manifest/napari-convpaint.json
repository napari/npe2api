{
  "name": "napari-convpaint",
  "display_name": "napari ConvPaint",
  "visibility": "public",
  "icon": "",
  "categories": [],
  "schema_version": "0.2.1",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-convpaint.make_qwidget",
        "title": "ConvPaint widget",
        "python_name": "napari_convpaint.conv_paint_widget:ConvPaintWidget",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      },
      {
        "id": "napari-convpaint.labelcell3d",
        "title": "Label cell 3D",
        "python_name": "napari_convpaint.convpaint_sample:create_annotation_cell3d",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "napari-convpaint.make_qwidget",
        "display_name": "ConvPaint",
        "autogenerate": false
      }
    ],
    "sample_data": [
      {
        "command": "napari-convpaint.labelcell3d",
        "key": "labelcell3d",
        "display_name": "Label cell 3D"
      }
    ],
    "themes": null,
    "menus": {},
    "submenus": null,
    "keybindings": null,
    "configuration": []
  },
  "package_metadata": {
    "metadata_version": "2.4",
    "name": "napari-convpaint",
    "version": "0.7.0",
    "dynamic": [
      "license-file"
    ],
    "platform": null,
    "supported_platform": null,
    "summary": "A plugin for segmentation by pixel classification using pre-trained neural networks for feature extraction",
    "description": "\n[![License](https://img.shields.io/pypi/l/napari-convpaint.svg?color=green)](https://github.com/guiwitz/napari-convpaint/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-convpaint.svg?color=green)](https://pypi.org/project/napari-convpaint)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-convpaint.svg?color=green)](https://python.org)\n[![tests](https://github.com/guiwitz/napari-convpaint/workflows/tests/badge.svg)](https://github.com/guiwitz/napari-convpaint/actions)\n[![codecov](https://codecov.io/gh/guiwitz/napari-convpaint/branch/main/graph/badge.svg)](https://codecov.io/gh/guiwitz/napari-convpaint)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-convpaint)](https://napari-hub.org/plugins/napari-convpaint)\n\n\n\n![overview conv-paint](/images/overview_github.png)\nThis napari plugin can be used to segment objects or structures in images based on a few brush strokes providing examples of the classes. Based on the same idea as other tools like ilastik, its main strength is that it can use features from pretrained neural networks like VGG16 or DINOV2, enabling the segmentation of more complex images.\n\n**Find more information and tutorials in the [docs](https://guiwitz.github.io/napari-convpaint/) or read the [preprint](https://doi.org/10.1101/2024.09.12.610926).**\n\n\n![overview conv-paint](/images/network_github.png)\n\n## Installation\n\nYou can install `napari-convpaint` via [pip]\n\n    pip install napari-convpaint\n\nTo install latest development version :\n\n    pip install git+https://github.com/guiwitz/napari-convpaint.git\n\n\n## Example use case: Tracking shark body parts in a movie\nThese are the scribble annotations provided for training:\n![](./images/shark_annot.png)\n\nAnd this is the resulting Convpaint segmentation:\n<video src=\"https://github.com/user-attachments/assets/6a2be1fe-25cc-4af1-9f50-aab9bc4123d9\"></video>\n\nCheck out the documentation or the paper for more usecases!\n\n## API\n\nYou can now use the API in a fashion very similar to the napari plugin. The ConvpaintModel class combines a feature extractor and a classifier model, and holds all the parameters defining the model. Initialize a ConvpaintModel object, train its classifier and use it to segment an image:\n\n```Python\ncp_model = ConvpaintModel(\"dino\") # alternatively use vgg, cellpose or gaussian\ncp_model.train(image, annotations)\nsegmentation = cp_model.segment(image)\n```\n\nThere are many other options, such as predicting all class probabilities (see below) and we will update the documentation and notebook examples soon. In the meantime feel free to test it yourself.\n\n```Python\nprobas = cp_model.predict_probas(image)\n```\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-convpaint\" is free and open source software\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/guiwitz/napari-convpaint/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n## Authors\n\nThe idea behind this napari plugin was first developed by [Lucien Hinderling](https://hinderling.github.io) in the group of [Olivier Pertz](https://www.pertzlab.net/), at the Institute of Cell Biology, University of Bern. Pertz lab obtained a CZI napari plugin development grant with the title [\"Democratizing Image Analysis with an Easy-to-Train Classifier\"](https://chanzuckerberg.com/science/programs-resources/imaging/napari/democratizing-image-analysis-with-an-easy-to-train-classifier/) which supported the adaptation of the initial concept as a napari plugin called napari-convpaint. The plugin has been developed by [Guillaume Witz<sup>1</sup>](https://guiwitz.github.io/blog/about/), [Roman Schwob<sup>1,2</sup>](https://github.com/quasar1357) and Lucien Hinderling<sup>2</sup> with much appreciated assistance of [Benjamin Gr\u00e4del<sup>2</sup>](https://x.com/benigraedel), [Maciej Dobrzy\u0144ski<sup>2</sup>](https://macdobry.net), Mykhailo Vladymyrov<sup>1</sup> and Ana Stojiljkovi\u0107<sup>1</sup>.\n\n<sup>1</sup>[Data Science Lab](https://www.dsl.unibe.ch/), University of Bern \\\n<sup>2</sup>[Pertz Lab](https://www.pertzlab.net/), Institute of Cell Biology, University of Bern \n\n## Cite Convpaint\n\nIf you find Convpaint useful in your research, please consider citing our work. Please also cite any Feature Extractor you have used in Convpaint, such as [ilastik](https://github.com/ilastik/ilastik-napari), [cellpose](https://cellpose.readthedocs.io/en/latest/) or [DINOv2](https://github.com/facebookresearch/dinov2).\n\nConvpaint:\n```\n@article {Hinderling2024,\n\tauthor = {Hinderling, Lucien and Witz, Guillaume and Schwob, Roman and Stojiljkovi\u0107, Ana and Dobrzy\u0144ski, Maciej and Vladymyrov, Mykhailo and Frei, Jo\u00ebl and Gr\u00e4del, Benjamin and Frismantiene, Agne and Pertz, Olivier},\n\ttitle = {Convpaint - Interactive pixel classification using pretrained neural networks},\n\telocation-id = {2024.09.12.610926},\n\tdoi = {10.1101/2024.09.12.610926},\n\tjournal = {bioRxiv},\n\tpublisher = {Cold Spring Harbor Laboratory},\n\tyear = {2024},\n}\n```\nSuggested citations for feature extractors:\n```\n@article {Berg2019,\n\tauthor = {Berg, Stuart and Kutra, Dominik and Kroeger, Thorben and Straehle, Christoph N. and Kausler, Bernhard X. and Haubold, Carsten and Schiegg, Martin and Ales, Janez and Beier, Thorsten and Rudy, Markus and Eren, Kemal and Cervantes, Jaime I. and Xu, Buote and Beuttenmueller, Fynn and Wolny, Adrian and Zhang, Chong and Koethe, Ullrich and Hamprecht, Fred A. and Kreshuk, Anna},\n\ttitle = {ilastik: interactive machine learning for (bio)image analysis.},\n\tissn = {1548-7105},\n\turl = {https://doi.org/10.1038/s41592-019-0582-9},\n\tdoi = {10.1038/s41592-019-0582-9},\n\tjournal = {Nature Methods},\n\tpublisher = {Springer Nature},\n\tyear = {2019},\n\tjournal = {Nature Methods},\n}\n```\n```\n@article {Stringer2021,\n\tauthor = {Stringer, Carsen and Wang, Tim and Michaelos, Michalis and Pachitariu Marius},\n\ttitle = {Cellpose: a generalist algorithm for cellular segmentation.},\n\telocation-id = {s41592-020-01018-x},\n\tdoi = {10.1038/s41592-020-01018-x},\n\tjournal = {Nature Methods},\n\tpublisher = {Springer Nature},\n\tyear = {2021},\n}\n```\n```\n@article {oquab2024dinov2learningrobustvisual,\n      title={DINOv2: Learning Robust Visual Features without Supervision}, \n      author={Maxime Oquab and Timoth\u00e9e Darcet and Th\u00e9o Moutakanni and Huy Vo and Marc Szafraniec and Vasil Khalidov and Pierre Fernandez and Daniel Haziza and Francisco Massa and Alaaeldin El-Nouby and Mahmoud Assran and Nicolas Ballas and Wojciech Galuba and Russell Howes and Po-Yao Huang and Shang-Wen Li and Ishan Misra and Michael Rabbat and Vasu Sharma and Gabriel Synnaeve and Hu Xu and Herv\u00e9 Jegou and Julien Mairal and Patrick Labatut and Armand Joulin and Piotr Bojanowski},\n      year={2024},\n      eprint={2304.07193},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV},\n      url={https://arxiv.org/abs/2304.07193}\n}\n\n```\n",
    "description_content_type": "text/markdown",
    "keywords": "napari,plugin,segmentation,machine learning,deep learning,image analysis,neural networks",
    "home_page": "https://github.com/guiwitz/napari-convpaint",
    "download_url": null,
    "author": "Guillaume Witz",
    "author_email": "guillaume.witz@unibe.ch",
    "maintainer": null,
    "maintainer_email": null,
    "license": "BSD-3-Clause",
    "classifier": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "Topic :: Software Development :: Testing",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: BSD License"
    ],
    "requires_dist": [
      "catboost",
      "einops",
      "joblib",
      "magicgui",
      "napari",
      "napari-annotation-project",
      "napari-guitils",
      "numpy",
      "pandas",
      "pyyaml",
      "qtpy",
      "scikit-learn",
      "scikit-image",
      "tifffile",
      "torch",
      "torchvision>=0.13.0",
      "zarr",
      "tox; extra == \"testing\"",
      "pytest; extra == \"testing\"",
      "pytest-cov; extra == \"testing\"",
      "pytest-qt; extra == \"testing\"",
      "pyqt5; extra == \"testing\"",
      "cellpose; extra == \"cellpose\"",
      "ilastik-napari; extra == \"ilastik\"",
      "pyqt5; extra == \"qt\""
    ],
    "requires_python": ">=3.9",
    "requires_external": null,
    "project_url": [
      "Bug Tracker, https://github.com/guiwitz/napari-convpaint/issues",
      "Documentation, https://github.com/guiwitz/napari-convpaint#README.md",
      "Source Code, https://github.com/guiwitz/napari-convpaint",
      "User Support, https://github.com/guiwitz/napari-convpaint/issues"
    ],
    "provides_extra": [
      "testing",
      "cellpose",
      "ilastik",
      "qt"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": false
}